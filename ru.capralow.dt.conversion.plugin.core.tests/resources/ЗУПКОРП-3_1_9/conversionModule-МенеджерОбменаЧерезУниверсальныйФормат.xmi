<?xml version="1.0" encoding="UTF-8"?>
<cm:ConversionModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://ru.capralow.dt.conversion.plugin.core.cm.model" xmlns:mdclass="http://g5.1c.ru/v8/dt/metadata/mdclass" storeVersion="2" beforeConvertationEvent="&#x9;ПередКонвертациейЗУП30(КомпонентыОбмена);" afterConvertationEvent="&#x9;" beforeFillingEvent="&#x9;">
  <subsystems specialSubsystemType="Главное"/>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.ПодборПерсонала#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Мотивация#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.ОбучениеИРазвитие#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Кадры#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Зарплата#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.ВыплатыПеречисления#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.НалогиИВзносы#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Отчетность#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.ОхранаТруда#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Настройка#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Администрирование#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.Самообслуживание#/"/>
  </subsystems>
  <subsystems>
    <subsystem href="bm://Демо_ЗУП_319/Subsystem.ОбучениеИРазвитие.Subsystem.КадровыйРезерв#/"/>
  </subsystems>
  <subsystems specialSubsystemType="&lt;Остальное>"/>
  <dataRules name="Документ_ВедомостьНаВыплатуЗПВКассу" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыВКассу" forSending="true" onProcessingEvent="&#x9;ДанныеВедомостиПоНДФЛ = Новый Структура;&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеВедомостиПоНДФЛ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;РасшифровкаНДФЛ = ДанныеВедомостиПоНДФЛ.РасшифровкаПлатежа;&#xD;&#xA;&#x9;Если РасшифровкаНДФЛ.Количество() = 0&#xD;&#xA;&#x9;&#x9;Или РасшифровкаНДФЛ.Итог(&quot;Сумма&quot;) = 0 Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Документ_ВедомостьНаВыплатуЗПВКассу_НДФЛ = Ложь;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.0 //@objectRules.1" subsystems="//@subsystems.0">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыВКассу#/"/>
  </dataRules>
  <dataRules name="Документ_ВедомостьНаВыплатуЗППеречислением" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыПеречислением" forSending="true" onProcessingEvent="&#x9;ДанныеВедомостиПоНДФЛ = Новый Структура;&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеВедомостиПоНДФЛ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;РасшифровкаНДФЛ = ДанныеВедомостиПоНДФЛ.РасшифровкаПлатежа;&#xD;&#xA;&#x9;Если РасшифровкаНДФЛ.Количество() = 0&#xD;&#xA;&#x9;&#x9;Или РасшифровкаНДФЛ.Итог(&quot;Сумма&quot;) = 0 Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Документ_ВедомостьНаВыплатуЗППеречислением_НДФЛ = Ложь;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.2 //@objectRules.3">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыПеречислением#/"/>
  </dataRules>
  <dataRules name="Документ_ВедомостьНаВыплатуЗПРаздатчиком" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыРаздатчиком" forSending="true" onProcessingEvent="&#x9;ДанныеВедомостиПоНДФЛ = Новый Структура;&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеВедомостиПоНДФЛ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;РасшифровкаНДФЛ = ДанныеВедомостиПоНДФЛ.РасшифровкаПлатежа;&#xD;&#xA;&#x9;Если РасшифровкаНДФЛ.Количество() = 0&#xD;&#xA;&#x9;&#x9;Или РасшифровкаНДФЛ.Итог(&quot;Сумма&quot;) = 0 Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Документ_ВедомостьНаВыплатуЗПРаздатчиком_НДФЛ = Ложь;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.4 //@objectRules.5">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыРаздатчиком#/"/>
  </dataRules>
  <dataRules name="Документ_ДоговорЗаймаСотруднику_Отправка" configurationObjectName="Метаданные.Документы.ДоговорЗаймаСотруднику" forSending="true" onProcessingEvent="&#x9;ИспользованиеПКО.Документ_ДоговорЗаймаСотруднику = Ложь;&#xD;&#xA;&#x9;ИспользованиеПКО.Документ_ДоговорЗаймаСотруднику_ИзСтруктуры = Ложь;" objectRules="//@objectRules.6 //@objectRules.7">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ДоговорЗаймаСотруднику#/"/>
  </dataRules>
  <dataRules name="Документ_НачислениеОценочныхОбязательствПоОтпускам" configurationObjectName="Метаданные.Документы.НачислениеОценочныхОбязательствПоОтпускам" forSending="true" objectRules="//@objectRules.8">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.НачислениеОценочныхОбязательствПоОтпускам#/"/>
  </dataRules>
  <dataRules name="Документ_ОтражениеЗарплатыВБухучете_Отправка" configurationObjectName="Метаданные.Документы.ОтражениеЗарплатыВБухучете" forSending="true" objectRules="//@objectRules.9" subsystems="//@subsystems.5">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ОтражениеЗарплатыВБухучете#/"/>
  </dataRules>
  <dataRules name="Документ_ПлатежноеПоручение" configurationObjectName="Метаданные.Документы.ПлатежноеПоручение" forSending="true" onProcessingEvent="&#x9;ДанныеПоНДФЛ = Новый Структура;&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоПлатежноеПоручение_НДФЛ(ДанныеИБ, ДанныеПоНДФЛ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;РасшифровкаНДФЛ = ДанныеПоНДФЛ.РасшифровкаПлатежа;&#xD;&#xA;&#x9;Если РасшифровкаНДФЛ.Количество() = 0&#xD;&#xA;&#x9;&#x9;Или РасшифровкаНДФЛ.Итог(&quot;Сумма&quot;) = 0 Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Документ_ПлатежноеПоручение_НДФЛ = Ложь;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.10 //@objectRules.11">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ПлатежноеПоручение#/"/>
  </dataRules>
  <dataRules name="Справочник_Банки_Отправка" configurationObjectName="Метаданные.Справочники.КлассификаторБанков" forSending="true" onProcessingEvent="&#x9;Если Не ДанныеИБ = Неопределено&#xD;&#xA;&#x9;&#x9;И ДанныеИБ.ЭтоГруппа Тогда&#x9;&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Справочник_Банки = Ложь;&#x9;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.12" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.КлассификаторБанков#/"/>
  </dataRules>
  <dataRules name="Справочник_БанковскиеСчетаКонтрагентов_Отправка" configurationObjectName="Метаданные.Справочники.БанковскиеСчетаКонтрагентов" forSending="true" objectRules="//@objectRules.13" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.БанковскиеСчетаКонтрагентов#/"/>
  </dataRules>
  <dataRules name="Справочник_ВидыРаботСотрудников_Отправка" configurationObjectName="Метаданные.Справочники.ВидыРаботСотрудников" forSending="true" onProcessingEvent="&#x9;ИспользованиеПКО.Справочник_ВидыРаботСотрудников&#x9;&#x9;= Не ДанныеИБ.ЭтоГруппа;&#xD;&#xA;&#x9;ИспользованиеПКО.Справочник_ВидыРаботСотрудниковГруппа&#x9;= ДанныеИБ.ЭтоГруппа;" objectRules="//@objectRules.14 //@objectRules.15">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ВидыРаботСотрудников#/"/>
  </dataRules>
  <dataRules name="Справочник_ДокументыФизическихЛиц_Отправка" configurationObjectName="Метаданные.РегистрыСведений.ДокументыФизическихЛиц" forSending="true" onProcessingEvent="&#x9;Если Не СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ДокументыФизическихЛиц&quot;)&#xD;&#xA;&#x9;&#x9;И ИспользованиеПКО.Свойство(&quot;Справочник_ДокументыФизическихЛиц_Отправка&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Удалить(&quot;Справочник_ДокументыФизическихЛиц_Отправка&quot;);&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.16">
    <configurationObject xsi:type="mdclass:InformationRegister" href="bm://Демо_ЗУП_319/InformationRegister.ДокументыФизическихЛиц#/"/>
  </dataRules>
  <dataRules name="Справочник_ЗППроекты_Отправка" configurationObjectName="Метаданные.Справочники.ЗарплатныеПроекты" forSending="true" objectRules="//@objectRules.17 //@objectRules.18">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ЗарплатныеПроекты#/"/>
  </dataRules>
  <dataRules name="Справочник_Контрагенты_Отправка" configurationObjectName="Метаданные.Справочники.Контрагенты" forSending="true" objectRules="//@objectRules.19" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Контрагенты#/"/>
  </dataRules>
  <dataRules name="Справочник_Организации_Отправка" configurationObjectName="Метаданные.Справочники.Организации" forSending="true" objectRules="//@objectRules.20" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Организации#/"/>
  </dataRules>
  <dataRules name="Справочник_Подразделения_Отправка" configurationObjectName="Метаданные.Справочники.СтруктураПредприятия" forSending="true" objectRules="//@objectRules.21" subsystems="//@subsystems.4 //@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СтруктураПредприятия#/"/>
  </dataRules>
  <dataRules name="Справочник_Пользователи_Отправка" configurationObjectName="Метаданные.Справочники.Пользователи" forSending="true" objectRules="//@objectRules.22">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Пользователи#/"/>
  </dataRules>
  <dataRules name="Справочник_РегистрацииВНалоговомОргане_Отправка" configurationObjectName="Метаданные.Справочники.РегистрацииВНалоговомОргане" forSending="true" onProcessingEvent="&#x9;Если Не ЗначениеЗаполнено(ДанныеИБ.Владелец)&#xD;&#xA;&#x9;&#x9;Или Не ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.Владелец)&#xD;&#xA;&#x9;&#x9;Или Не ЗначениеЗаполнено(ДанныеИБ.Код)&#xD;&#xA;&#x9;&#x9;Или (Не ЗначениеЗаполнено(ДанныеИБ.НаименованиеОбособленногоПодразделения)&#xD;&#xA;&#x9;&#x9;&#x9;И Не ЗначениеЗаполнено(ДанныеИБ.НаименованиеИФНС)) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Справочник_РегистрацииВНалоговомОргане = Ложь;&#xD;&#xA;&#x9;&#x9;ШаблонПредупреждения = НСтр(&quot;ru = 'Регистрация в налоговом органе %1 не может быть выгружена,&#xD;&#xA;&#x9;&#x9;|т.к. в ней имеются незаполненные обязательные реквизиты.'&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстПредупреждения = СтрШаблон(ШаблонПредупреждения, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КомпонентыОбмена.СостояниеОбменаДанными.РезультатВыполненияОбмена = Перечисления.РезультатыВыполненияОбмена.ВыполненоСПредупреждениями; &#xD;&#xA;&#x9;&#x9;ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(&#xD;&#xA;&#x9;&#x9;&#x9;КомпонентыОбмена, ТекстПредупреждения,,&#x9;Ложь,,,);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.23" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.РегистрацииВНалоговомОргане#/"/>
  </dataRules>
  <dataRules name="Справочник_СпособыОтраженияЗарплатыВБухУчете_Отправка" configurationObjectName="Метаданные.Справочники.СпособыОтраженияЗарплатыВБухУчете" forSending="true" onProcessingEvent="&#x9;ИспользованиеПКО.Справочник_СпособыОтраженияЗарплатыВБухУчете&#x9;&#x9;= Не ДанныеИБ.ЭтоГруппа;&#xD;&#xA;&#x9;ИспользованиеПКО.Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа&#x9;= ДанныеИБ.ЭтоГруппа;" objectRules="//@objectRules.24 //@objectRules.25">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СпособыОтраженияЗарплатыВБухУчете#/"/>
  </dataRules>
  <dataRules name="Справочник_ФизическиеЛица_Отправка" configurationObjectName="Метаданные.Справочники.ФизическиеЛица" forSending="true" onProcessingEvent="&#x9;ИспользованиеПКО.Справочник_ФизическиеЛицаГруппа_Отправка = (ДанныеИБ.ЭтоГруппа);&#xD;&#xA;&#x9;ИспользованиеПКО.Справочник_ФизическиеЛица_Отправка = НЕ (ДанныеИБ.ЭтоГруппа);" objectRules="//@objectRules.26 //@objectRules.27">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ФизическиеЛица#/"/>
  </dataRules>
  <dataRules name="Документ_ДанныеДляРасчетаЗарплаты_Получение" formatObject="Документ.ВыработкаСотрудников" forReceiving="true" onProcessingEvent="&#x9;ВидДокумента = ВидДокументаСдельныеРаботы(КомпонентыОбмена, Справочники.Организации.ПустаяСсылка());&#xD;&#xA;&#x9;Если ВидДокумента.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;// Не введено ни одного шаблона для ввода данных по сдельным работам.&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Документ_ДанныеДляРасчетаЗарплаты_Получение = Ложь;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстПредупреждения = НСтр(&quot;ru = 'Данные для расчета зарплаты (выработка сотрудников) не могут быть загружены,&#xD;&#xA;&#x9;&#x9;|т.к. в справочнике &quot;&quot;Шаблоны ввода исходных данных&quot;&quot; нет ни одного элемента, соответствующего сдельным работам.'&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КомпонентыОбмена.СостояниеОбменаДанными.РезультатВыполненияОбмена = Перечисления.РезультатыВыполненияОбмена.ВыполненоСПредупреждениями; &#xD;&#xA;&#x9;&#x9;ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, ТекстПредупреждения, , Ложь, , , );&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.28"/>
  <dataRules name="Документ_ПБДСРасчетыССотрудниками_Получение" formatObject="Документ.ПБДСРасчетыССотрудниками" forReceiving="true" objectRules="//@objectRules.29"/>
  <dataRules name="Документ_ПКОРасчетыССотрудниками_Получение" formatObject="Документ.ПКОРасчетыССотрудниками" forReceiving="true" objectRules="//@objectRules.30"/>
  <dataRules name="Документ_РКОРасчетыССотрудниками_Получение" formatObject="Документ.РКОРасчетыССотрудниками" forReceiving="true" objectRules="//@objectRules.31"/>
  <dataRules name="Документ_СБДСРасчетыССотрудниками_Получение" formatObject="Документ.СБДСРасчетыССотрудниками" forReceiving="true" objectRules="//@objectRules.32"/>
  <dataRules name="Справочник_Банки_Получение" formatObject="Справочник.Банки" forReceiving="true" onProcessingEvent="&#x9;ИспользованиеПКО.Справочник_БанкиГруппа = Ложь;" objectRules="//@objectRules.12 //@objectRules.33"/>
  <dataRules name="Справочник_ВидыРаботСотрудников_Получение" formatObject="Справочник.ВидыРаботСотрудников" forReceiving="true" objectRules="//@objectRules.14"/>
  <dataRules name="Справочник_ВидыРаботСотрудниковГруппа_Получение" formatObject="Справочник.ВидыРаботСотрудниковГруппа" forReceiving="true" objectRules="//@objectRules.15"/>
  <dataRules name="Справочник_ДокументыФизическихЛиц_Получение" formatObject="Справочник.ДокументыФизическихЛиц" forReceiving="true" onProcessingEvent="&#x9;СвойстваОтбор = ДанныеXDTO;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;КлючевыеСвойства&quot;) Тогда&#xD;&#xA;&#x9;&#x9;СвойстваОтбор = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ФизическоеЛицоОтбор = Неопределено;&#xD;&#xA;&#x9;ВидДокументаОтбор   = Неопределено;&#xD;&#xA;&#x9;ПериодОтбор         = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;СвойстваОтбор.Свойство(&quot;ФизическоеЛицоОтбор&quot;, ФизическоеЛицоОтбор);&#xD;&#xA;&#x9;СвойстваОтбор.Свойство(&quot;ВидДокументаОтбор&quot;,   ВидДокументаОтбор);&#xD;&#xA;&#x9;СвойстваОтбор.Свойство(&quot;ПериодОтбор&quot;,         ПериодОтбор);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ПравилоКонвертацииФизическиеЛица = ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, &quot;Справочник_ФизическиеЛица_Получение&quot;);&#xD;&#xA;&#x9;ПравилоКонвертацииВидыДокументов = ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, &quot;Справочник_ВидыДокументовФизическихЛиц&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДокументыФЛ = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ФизическоеЛицоОтбор) Тогда&#xD;&#xA;&#x9;&#x9;ДокументыФЛ.Отбор.Физлицо.Установить(ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(&#xD;&#xA;&#x9;&#x9;&#x9;КомпонентыОбмена, ФизическоеЛицоОтбор, ПравилоКонвертацииФизическиеЛица, &quot;ПолучитьСсылку&quot;).Ссылка);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ВидДокументаОтбор) Тогда&#xD;&#xA;&#x9;&#x9;ДокументыФЛ.Отбор.ВидДокумента.Установить(ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(&#xD;&#xA;&#x9;&#x9;&#x9;КомпонентыОбмена, ВидДокументаОтбор, ПравилоКонвертацииВидыДокументов, &quot;ПолучитьСсылку&quot;).Ссылка);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ПериодОтбор) Тогда&#xD;&#xA;&#x9;&#x9;ДокументыФЛ.Отбор.Период.Установить(ПериодОтбор);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(ДокументыФЛ.Отбор.Физлицо.Значение) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;Записи&quot;)&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеXDTO.Записи) Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаЗаписи Из ДанныеXDTO.Записи Цикл&#xD;&#xA;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ = ДокументыФЛ.Добавить();&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Если Не ЗначениеЗаполнено(ДокументыФЛ.Отбор.Физлицо.Значение) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.Физлицо = ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;КомпонентыОбмена, СтрокаЗаписи.ФизическоеЛицо, ПравилоКонвертацииФизическиеЛица, &quot;ПолучитьСсылку&quot;).Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.Физлицо = ДокументыФЛ.Отбор.Физлицо.Значение;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Если Не ЗначениеЗаполнено(ДокументыФЛ.Отбор.ВидДокумента.Значение) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.ВидДокумента = ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;КомпонентыОбмена, СтрокаЗаписи.ВидДокумента, ПравилоКонвертацииВидыДокументов, &quot;ПолучитьСсылку&quot;).Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.ВидДокумента = ДокументыФЛ.Отбор.ВидДокумента.Значение;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Если Не ЗначениеЗаполнено(ДокументыФЛ.Отбор.Период.Значение) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.Период = СтрокаЗаписи.Период;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.Период = ДокументыФЛ.Отбор.Период.Значение;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ЗаполнитьЗначенияСвойств(ЗаписьДокументыФЛ, СтрокаЗаписи, &quot;Серия, Номер, ДатаВыдачи, СрокДействия, КемВыдан, КодПодразделения, Представление&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ЗаписьДокументыФЛ.ЯвляетсяДокументомУдостоверяющимЛичность = Истина;&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДокументыФЛ.ОбменДанными.Загрузка = Истина;&#xD;&#xA;&#x9;ДокументыФЛ.Записать(Истина);"/>
  <dataRules name="Справочник_Организации_Получение" formatObject="Справочник.Организации" forReceiving="true" objectRules="//@objectRules.34"/>
  <dataRules name="Справочник_Подразделения_Получение" formatObject="Справочник.Подразделения" forReceiving="true" objectRules="//@objectRules.35"/>
  <dataRules name="Справочник_Пользователи_Получение" formatObject="Справочник.Пользователи" forReceiving="true" objectRules="//@objectRules.22"/>
  <dataRules name="Справочник_РегистрацииВНалоговомОргане_Получение" formatObject="Справочник.РегистрацииВНалоговомОргане" forReceiving="true" objectRules="//@objectRules.23"/>
  <dataRules name="Справочник_СпособыОтраженияЗарплатыВБухУчете_Получение" formatObject="Справочник.СпособыОтраженияЗарплатыВФинансовомУчете" forReceiving="true" objectRules="//@objectRules.24"/>
  <dataRules name="Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа_Получение" formatObject="Справочник.СпособыОтраженияЗарплатыВФинансовомУчетеГруппа" forReceiving="true" onProcessingEvent="&#x9;СтрокаПКО = КомпонентыОбмена.ПравилаКонвертацииОбъектов.Найти(&quot;Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа&quot;, &quot;ИмяПКО&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтрокаПКО = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа = Ложь;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;ИспользованиеПКО.Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа = СтрокаПКО.ОбъектДанных.Иерархический;&#xD;&#xA;&#x9;КонецЕсли;" objectRules="//@objectRules.25"/>
  <dataRules name="Справочник_ФизическиеЛица_Получение" formatObject="Справочник.ФизическиеЛица" forReceiving="true" objectRules="//@objectRules.36"/>
  <dataRules name="Справочник_ФизическиеЛицаГруппа_Получение" formatObject="Справочник.ФизическиеЛицаГруппа" forReceiving="true" objectRules="//@objectRules.26"/>
  <objectRules name="Документ_ВедомостьНаВыплатуЗПВКассу" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыВКассу" formatObject="Документ.ЗаявкаНаРасходДСВыплатаЗарплаты" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// ЖелательнаяФормаОплатыНаличные, ЖелательнаяФормаОплатыБезналичные, ЖелательнаяФормаОплатыПлатежнаяКарта, УтвержденнаяФормаОплаты.&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыНаличные&quot;, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыБезналичные&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыПлатежнаяКарта&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УтвержденнаяФормаОплаты&quot;, &quot;Наличная&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма, НомерВедомостиНаВыплатуЗарплаты, ДатаВедомостиНаВыплатуЗарплаты.&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости(ДанныеИБ, ДанныеXDTO);" subsystems="//@subsystems.0">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыВКассу#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="СуммаПоДокументу" formatAttribute="Сумма"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="ДатаВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="НомерВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ВедомостьНаВыплатуЗПВКассу_НДФЛ" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыВКассу" formatObject="Документ.ЗаявкаНаПереводДСВБюджет" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта.&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма.&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Сумма&quot;, ДанныеXDTO.РасшифровкаПлатежа.Итог(&quot;Сумма&quot;));" subsystems="//@subsystems.0">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыВКассу#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ВедомостьНаВыплатуЗППеречислением" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыПеречислением" formatObject="Документ.ЗаявкаНаРасходДСВыплатаЗарплаты" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// ЖелательнаяФормаОплатыНаличные, ЖелательнаяФормаОплатыБезналичные, ЖелательнаяФормаОплатыПлатежнаяКарта, УтвержденнаяФормаОплаты.&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыНаличные&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыБезналичные&quot;, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыПлатежнаяКарта&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УтвержденнаяФормаОплаты&quot;, &quot;Безналичная&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сотрудник, БанковскийСчет, Сумма, НомерВедомостиНаВыплатуЗарплаты, ДатаВедомостиНаВыплатуЗарплаты.&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости(ДанныеИБ, ДанныеXDTO);">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыПеречислением#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="СуммаПоДокументу" formatAttribute="Сумма"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="БанковскийСчет" objectRule="//@objectRules.13" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="ДатаВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="НомерВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сотрудник" objectRule="//@objectRules.27" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ВедомостьНаВыплатуЗППеречислением_НДФЛ" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыПеречислением" formatObject="Документ.ЗаявкаНаПереводДСВБюджет" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Сумма&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Сумма&quot;, ДанныеXDTO.РасшифровкаПлатежа.Итог(&quot;Сумма&quot;));">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыПеречислением#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ВедомостьНаВыплатуЗПРаздатчиком" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыРаздатчиком" formatObject="Документ.ЗаявкаНаРасходДСВыплатаЗарплаты" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// ЖелательнаяФормаОплатыНаличные, ЖелательнаяФормаОплатыБезналичные, ЖелательнаяФормаОплатыПлатежнаяКарта, УтвержденнаяФормаОплаты.&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыНаличные&quot;, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыБезналичные&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыПлатежнаяКарта&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УтвержденнаяФормаОплаты&quot;, &quot;Наличная&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма, НомерВедомостиНаВыплатуЗарплаты, ДатаВедомостиНаВыплатуЗарплаты.&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости(ДанныеИБ, ДанныеXDTO);">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыРаздатчиком#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="СуммаПоДокументу" formatAttribute="Сумма"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="ДатаВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="НомерВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ВедомостьНаВыплатуЗПРаздатчиком_НДФЛ" configurationObjectName="Метаданные.Документы.ВедомостьНаВыплатуЗарплатыРаздатчиком" formatObject="Документ.ЗаявкаНаПереводДСВБюджет" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(ДанныеИБ, Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Сумма&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Сумма&quot;, ДанныеXDTO.РасшифровкаПлатежа.Итог(&quot;Сумма&quot;));">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВедомостьНаВыплатуЗарплатыРаздатчиком#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ДоговорЗаймаСотруднику_ИзСтруктуры" formatObject="Документ.ЗаявкаНаРасходДСРасчетыССотрудниками" forSending="true">
    <attributeRules formatAttribute="Автор" objectRule="//@objectRules.22" isCustomRule="true"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ВидРасчетов" isCustomRule="true"/>
    <attributeRules formatAttribute="Дата" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="КрайнийСрокПлатежа" isCustomRule="true"/>
    <attributeRules formatAttribute="КтоЗаявил" objectRule="//@objectRules.22" isCustomRule="true"/>
    <attributeRules formatAttribute="Номер" isCustomRule="true"/>
    <attributeRules formatAttribute="Организация" objectRule="//@objectRules.20" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Сотрудник" objectRule="//@objectRules.27" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяДатаПлатежа" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ДоговорЗаймаСотруднику" configurationObjectName="Метаданные.Документы.ДоговорЗаймаСотруднику" formatObject="Документ.ЗаявкаНаРасходДСРасчетыССотрудниками" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта, ВидРасчетов&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ВидРасчетов&quot;, &quot;Займы&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Сумма(расшифровка)&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;ДоговорЗаймаСотруднику.Сумма КАК Сумма&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ДоговорЗаймаСотруднику.Ссылка = &amp;Ссылка&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;РасшифровкаПлатежа&quot;, Запрос.Выполнить().Выгрузить());">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ДоговорЗаймаСотруднику#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Сумма" formatAttribute="Сумма"/>
    <attributeRules configurationAttribute="ФизическоеЛицо" formatAttribute="Сотрудник" objectRule="//@objectRules.27"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ВидРасчетов" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="КрайнийСрокПлатежа" isCustomRule="true"/>
    <attributeRules formatAttribute="Номер" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяДатаПлатежа" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_НачислениеОценочныхОбязательствПоОтпускам" configurationObjectName="Метаданные.Документы.НачислениеОценочныхОбязательствПоОтпускам" formatObject="Документ.НачислениеОценочныхОбязательствПоОтпускам" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.МестоВСтруктуреПредприятия КАК ПодразделениеПредприятия,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВФинансовомУчете,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СтатьяФинансирования КАК СтатьяФинансирования,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерва КАК СуммаРезерва,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерваНУ КАК СуммаРезерваНУ,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерваСтраховыхВзносов КАК СуммаРезерваСтраховыхВзносов,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерваСтраховыхВзносовНУ КАК СуммаРезерваСтраховыхВзносовНУ,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерваФССНесчастныеСлучаи КАК СуммаРезерваФССНесчастныеСлучаи,&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.СуммаРезерваФССНесчастныеСлучаиНУ КАК СуммаРезерваФССНесчастныеСлучаиНУ&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.НачислениеОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК ОценочныеОбязательства&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ОценочныеОбязательства.Ссылка = &amp;Ссылка&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ОценочныеОбязательства = Запрос.Выполнить().Выгрузить();&#xD;&#xA;&#x9;ОценочныеОбязательства.Колонки.Добавить(&quot;Подразделение&quot;);&#xD;&#xA;&#x9;ЗаполнитьПодразделениеПоУмолчанию(ОценочныеОбязательства);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ОценочныеОбязательства&quot;, ОценочныеОбязательства);">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.НачислениеОценочныхОбязательствПоОтпускам#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="ДоляРасходов" formatAttribute="ДоляРасходов"/>
    <attributeRules configurationAttribute="Комментарий" formatAttribute="Комментарий"/>
    <attributeRules configurationAttribute="КорректировкаОбязательств" formatAttribute="КорректировкаОбязательств"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Ответственный" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="ПериодРегистрации" formatAttribute="ПериодРегистрации"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="ОблагаетсяЕНВД" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СпособОтраженияЗарплатыВФинансовомУчете" objectRule="//@objectRules.24" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерва" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерваНУ" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерваСтраховыхВзносов" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерваСтраховыхВзносовНУ" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерваФССНесчастныеСлучаи" isCustomRule="true"/>
    <attributeRules formatTabularSection="ОценочныеОбязательства" formatAttribute="СуммаРезерваФССНесчастныеСлучаиНУ" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ОтражениеЗарплатыВБухучете" configurationObjectName="Метаданные.Документы.ОтражениеЗарплатыВБухучете" formatObject="Документ.ОтражениеЗарплатыВФинансовомУчете" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.МестоВСтруктуреПредприятия КАК ПодразделениеПредприятия,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ВидОперации КАК ВидОперацииСсылка,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВФинансовомУчете,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУСсылка,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.Сумма) КАК Сумма,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРСПревышения) КАК ПФРСПревышения,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРСтраховая) КАК ПФРСтраховая,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРНакопительная) КАК ПФРНакопительная,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ФСС) КАК ФСС,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ФФОМС) КАК ФФОМС,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ТФОМС) КАК ТФОМС,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ОтражениеЗарплатыВБухучете.НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.МестоВСтруктуреПредприятия,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ВидОперации,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.ВидНачисленияОплатыТрудаДляНУ&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|УПОРЯДОЧИТЬ ПО&#xD;&#xA;&#x9;|&#x9;ПодразделениеПредприятия,&#xD;&#xA;&#x9;|&#x9;ВидОперацииСсылка,&#xD;&#xA;&#x9;|&#x9;НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,&#xD;&#xA;&#x9;|&#x9;ОблагаетсяЕНВД,&#xD;&#xA;&#x9;|&#x9;ВидНачисленияОплатыТрудаДляНУСсылка&#xD;&#xA;&#x9;|;&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.ВидОперации КАК ВидОперацииСсылка,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодПоОКАТО КАК КодПоОКАТО,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодПоОКТМО КАК КодПоОКТМО,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КПП КАК КПП,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодНалоговогоОргана КАК КодНалоговогоОргана,&#xD;&#xA;&#x9;|&#x9;СУММА(НачисленныйНДФЛ.Сумма) КАК Сумма&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ОтражениеЗарплатыВБухучете.НачисленныйНДФЛ КАК НачисленныйНДФЛ&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.ВидОперации,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодПоОКАТО,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодПоОКТМО,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КПП,&#xD;&#xA;&#x9;|&#x9;НачисленныйНДФЛ.КодНалоговогоОргана&#xD;&#xA;&#x9;|;&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.МестоВСтруктуреПредприятия КАК ПодразделениеПредприятия,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.ВидОперации КАК ВидОперацииСсылка,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.Контрагент КАК Контрагент,&#xD;&#xA;&#x9;|&#x9;СУММА(УдержаннаяЗарплата.Сумма) КАК Сумма&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ОтражениеЗарплатыВБухучете.УдержаннаяЗарплата КАК УдержаннаяЗарплата&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.ФизическоеЛицо,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.МестоВСтруктуреПредприятия,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.ВидОперации,&#xD;&#xA;&#x9;|&#x9;УдержаннаяЗарплата.Контрагент&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;РезультатыЗапроса = Запрос.ВыполнитьПакет();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// НачисленнаяЗарплатаИВзносы&#xD;&#xA;&#x9;ТаблицаНачисленнаяЗарплатаИВзносы = РезультатыЗапроса[0].Выгрузить();&#xD;&#xA;&#x9;ТаблицаНачисленнаяЗарплатаИВзносы.Колонки.Добавить(&quot;Подразделение&quot;);&#xD;&#xA;&#x9;ЗаполнитьПодразделениеПоУмолчанию(ТаблицаНачисленнаяЗарплатаИВзносы);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДобавитьИдентификаторПеречисленияПоСсылке(ТаблицаНачисленнаяЗарплатаИВзносы, &quot;ВидОперации&quot;);&#xD;&#xA;&#x9;ДобавитьИдентификаторПеречисленияПоСсылке(ТаблицаНачисленнаяЗарплатаИВзносы, &quot;ВидНачисленияОплатыТрудаДляНУ&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;НачисленнаяЗарплатаИВзносы&quot;, ТаблицаНачисленнаяЗарплатаИВзносы);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// НачисленныйНДФЛ&#xD;&#xA;&#x9;ТаблицаНачисленныйНДФЛ = РезультатыЗапроса[1].Выгрузить();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ОтражениеЗарплатыВБухучете.ЗаполнитьРегистрациюВНалоговомОрганеВКоллекцииСтрок(ДанныеИБ.Организация, ДанныеИБ.ПериодРегистрации, ТаблицаНачисленныйНДФЛ);&#xD;&#xA;&#x9;ТаблицаНачисленныйНДФЛ.Свернуть(&quot;ВидОперацииСсылка, РегистрацияВНалоговомОргане&quot;, &quot;Сумма&quot;);&#xD;&#xA;&#x9;ТаблицаНачисленныйНДФЛ.Сортировать(&quot;ВидОперацииСсылка, РегистрацияВНалоговомОргане&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДобавитьИдентификаторПеречисленияПоСсылке(ТаблицаНачисленныйНДФЛ, &quot;ВидОперации&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;НачисленныйНДФЛ&quot;, ТаблицаНачисленныйНДФЛ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// УдержаннаяЗарплата&#xD;&#xA;&#x9;ТаблицаУдержаннаяЗарплата = РезультатыЗапроса[2].Выгрузить();&#xD;&#xA;&#x9;ТаблицаУдержаннаяЗарплата.Колонки.Добавить(&quot;Подразделение&quot;);&#xD;&#xA;&#x9;ЗаполнитьПодразделениеПоУмолчанию(ТаблицаУдержаннаяЗарплата);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДобавитьИдентификаторПеречисленияПоСсылке(ТаблицаУдержаннаяЗарплата, &quot;ВидОперации&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УдержаннаяЗарплата&quot;, ТаблицаУдержаннаяЗарплата);" subsystems="//@subsystems.5">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ОтражениеЗарплатыВБухучете#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Комментарий" formatAttribute="Комментарий"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Ответственный" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="ПериодРегистрации" formatAttribute="ПериодРегистрации"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ВидНачисленияОплатыТрудаДляНУ" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ВидОперации" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ОблагаетсяЕНВД" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРДоПредельнойВеличины" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаПодземныхИВредныхРаботах" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРНаДоплатуЛетчикам" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРНаДоплатуШахтерам" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРНакопительная" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРПоСуммарномуТарифу" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРСПревышения" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ПФРСтраховая" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="СпособОтраженияЗарплатыВФинансовомУчете" objectRule="//@objectRules.24" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ТФОМС" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ФСС" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ФССНесчастныеСлучаи" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленнаяЗарплатаИВзносы" formatAttribute="ФФОМС" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленныйНДФЛ" formatAttribute="ВидОперации" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленныйНДФЛ" formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленныйНДФЛ" formatAttribute="РегистрацияВНалоговомОргане" objectRule="//@objectRules.23" isCustomRule="true"/>
    <attributeRules formatTabularSection="НачисленныйНДФЛ" formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="УдержаннаяЗарплата" formatAttribute="ВидОперации" isCustomRule="true"/>
    <attributeRules formatTabularSection="УдержаннаяЗарплата" formatAttribute="Контрагент" objectRule="//@objectRules.19" isCustomRule="true"/>
    <attributeRules formatTabularSection="УдержаннаяЗарплата" formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatTabularSection="УдержаннаяЗарплата" formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="УдержаннаяЗарплата" formatAttribute="ФизическоеЛицо" objectRule="//@objectRules.27" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ПлатежноеПоручение" configurationObjectName="Метаданные.Документы.ПлатежноеПоручение" formatObject="Документ.ЗаявкаНаРасходДСВыплатаЗарплаты" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта.&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;Для Каждого СтрокаВедомости Из ДанныеИБ.Ведомости Цикл&#xD;&#xA;&#x9;&#x9;ТекПодразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(СтрокаВедомости.Ведомость.ПолучитьОбъект());&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не Подразделение = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И Не Подразделение = ТекПодразделение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;Прервать;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;Подразделение = ТекПодразделение;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Сведения = ОбменСБанкамиПоЗарплатнымПроектам.СведенияОПлатежномДокументе(ДанныеИБ.Ведомости.ВыгрузитьКолонку(&quot;Ведомость&quot;), Неопределено);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Контрагент&quot;,     Новый Структура(&quot;Значение, ИмяПКО&quot;, Сведения.ЗарплатныйПроект, &quot;Справочник_ЗППроекты_КакКонтрагенты&quot;));&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;БанковскийСчет&quot;, Новый Структура(&quot;Значение, ИмяПКО&quot;, Сведения.ЗарплатныйПроект, &quot;Справочник_ЗППроекты_КакБанковскиеСчета&quot;));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыНаличные&quot;,       Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыБезналичные&quot;,    Истина);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ЖелательнаяФормаОплатыПлатежнаяКарта&quot;, Ложь);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УтвержденнаяФормаОплаты&quot;,              &quot;Безналичная&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;СУММА(ВедомостьНаВыплатуЗарплатыВБанк.СуммаПоДокументу) КАК Сумма,&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручение.НомерРеестра КАК НомерВедомостиНаВыплатуЗарплаты,&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручение.Дата КАК ДатаВедомостиНаВыплатуЗарплаты&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ПлатежноеПоручение КАК ПлатежноеПоручение&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение.Ведомости КАК ПлатежноеПоручениеВедомости&#xD;&#xA;&#x9;|&#x9;&#x9;ПО ПлатежноеПоручениеВедомости.Ссылка = ПлатежноеПоручение.Ссылка&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк&#xD;&#xA;&#x9;|&#x9;&#x9;ПО ВедомостьНаВыплатуЗарплатыВБанк.Ссылка = ПлатежноеПоручениеВедомости.Ведомость&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручениеВедомости.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручение.НомерРеестра,&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручение.Дата&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТаблицаРасшифровка = Запрос.Выполнить().Выгрузить();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;РасшифровкаПлатежа&quot;, ТаблицаРасшифровка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Сумма&quot;, ТаблицаРасшифровка.Итог(&quot;Сумма&quot;));">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ПлатежноеПоручение#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules formatAttribute="БанковскийСчет" objectRule="//@objectRules.13" isCustomRule="true"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыБезналичные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыНаличные" isCustomRule="true"/>
    <attributeRules formatAttribute="ЖелательнаяФормаОплатыПлатежнаяКарта" isCustomRule="true"/>
    <attributeRules formatAttribute="Контрагент" objectRule="//@objectRules.19" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatAttribute="УтвержденнаяФормаОплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="ДатаВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="НомерВедомостиНаВыплатуЗарплаты" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ПлатежноеПоручение_НДФЛ" configurationObjectName="Метаданные.Документы.ПлатежноеПоручение" formatObject="Документ.ЗаявкаНаПереводДСВБюджет" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;// РасшифровкаПлатежа: Сумма.&#xD;&#xA;&#x9;ЗаполнитьРасшифровкуПлатежаПоПлатежноеПоручение_НДФЛ(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Сумма&quot;, ДанныеXDTO.РасшифровкаПлатежа.Итог(&quot;Сумма&quot;));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Статус, Валюта&#xD;&#xA;&#x9;ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС(КомпонентыОбмена, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Подразделение&#xD;&#xA;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;Для Каждого СтрокаВедомости Из ДанныеИБ.Ведомости Цикл&#xD;&#xA;&#x9;&#x9;ТекПодразделение = УправленческоеПодразделениеВедомостиНаВыплатуЗП(СтрокаВедомости.Ведомость.ПолучитьОбъект(), Истина);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не Подразделение = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И Не Подразделение = ТекПодразделение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;Прервать;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;Подразделение = ТекПодразделение;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Подразделение&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, Подразделение));">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ПлатежноеПоручение#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="КрайнийСрокПлатежа"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="УтвержденнаяДатаПлатежа"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.20"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Автор" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="КтоЗаявил" objectRule="//@objectRules.22"/>
    <attributeRules formatAttribute="Валюта" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Подразделение" objectRule="//@objectRules.21" isCustomRule="true"/>
    <attributeRules formatAttribute="Статус" isCustomRule="true"/>
    <attributeRules formatAttribute="Сумма" isCustomRule="true"/>
    <attributeRules formatTabularSection="РасшифровкаПлатежа" formatAttribute="Сумма" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_Банки" configurationObjectName="Метаданные.Справочники.КлассификаторБанков" formatObject="Справочник.Банки" forSending="true" forReceiving="true" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.КлассификаторБанков#/"/>
    <attributeRules configurationAttribute="Адрес" formatAttribute="Адрес"/>
    <attributeRules configurationAttribute="Город" formatAttribute="Город"/>
    <attributeRules configurationAttribute="Код" formatAttribute="БИК"/>
    <attributeRules configurationAttribute="КоррСчет" formatAttribute="КоррСчет"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Телефоны" formatAttribute="Телефоны"/>
    <identificationFields>Код</identificationFields>
  </objectRules>
  <objectRules name="Справочник_БанковскиеСчетаКонтрагентов" configurationObjectName="Метаданные.Справочники.БанковскиеСчетаКонтрагентов" formatObject="Справочник.БанковскиеСчета" forSending="true" onSendingEvent="&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Владелец&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.Владелец));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ВалютаДенежныхСредств&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты()));" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.БанковскиеСчетаКонтрагентов#/"/>
    <attributeRules configurationAttribute="Банк" formatAttribute="Банк" objectRule="//@objectRules.12"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="НомерСчета" formatAttribute="НомерСчета"/>
    <attributeRules formatAttribute="ВалютаДенежныхСредств" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Владелец" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_ВидыРаботСотрудников" configurationObjectName="Метаданные.Справочники.ВидыРаботСотрудников" formatObject="Справочник.ВидыРаботСотрудников" forSending="true" forReceiving="true" afterReceivingAlgorithm="//@algorithms.5" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ВидыРаботСотрудников#/"/>
    <attributeRules configurationAttribute="Код" formatAttribute="КодВПрограмме"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="Группа" objectRule="//@objectRules.15"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ВидыРаботСотрудниковГруппа" configurationObjectName="Метаданные.Справочники.ВидыРаботСотрудников" formatObject="Справочник.ВидыРаботСотрудниковГруппа" forSending="true" forReceiving="true" forGroup="true" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ВидыРаботСотрудников#/"/>
    <attributeRules configurationAttribute="Код" formatAttribute="КодВПрограмме"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="Группа" objectRule="//@objectRules.15"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ДокументыФизическихЛиц_Отправка" configurationObjectName="Метаданные.РегистрыСведений.ДокументыФизическихЛиц" formatObject="Справочник.ДокументыФизическихЛиц" forSending="true" onSendingEvent="&#x9;ДанныеXDTO.Вставить(&quot;ПериодОтбор&quot;,         ДанныеИБ.Отбор.Период.Значение);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ФизическоеЛицоОтбор&quot;, ДанныеИБ.Отбор.Физлицо.Значение);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ВидДокументаОтбор&quot;,   ДанныеИБ.Отбор.ВидДокумента.Значение);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТаблицаЗаписи = ДанныеИБ.Выгрузить();&#xD;&#xA;&#x9;ТаблицаЗаписи.Колонки.Добавить(&quot;ФизическоеЛицо&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Для Каждого СтрокаЗаписи Из ТаблицаЗаписи Цикл&#xD;&#xA;&#x9;&#x9;СтрокаЗаписи.ФизическоеЛицо = СтрокаЗаписи.Физлицо;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Записи&quot;, ТаблицаЗаписи);">
    <configurationObject xsi:type="mdclass:InformationRegister" href="bm://Демо_ЗУП_319/InformationRegister.ДокументыФизическихЛиц#/"/>
    <attributeRules formatAttribute="ВидДокументаОтбор" objectRule="//@objectRules.40" isCustomRule="true"/>
    <attributeRules formatAttribute="ПериодОтбор" isCustomRule="true"/>
    <attributeRules formatAttribute="ФизическоеЛицоОтбор" objectRule="//@objectRules.27" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="ВидДокумента" objectRule="//@objectRules.40" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="ДатаВыдачи" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="КемВыдан" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="КодПодразделения" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="Номер" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="Период" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="Представление" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="Серия" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="СрокДействия" isCustomRule="true"/>
    <attributeRules formatTabularSection="Записи" formatAttribute="ФизическоеЛицо" objectRule="//@objectRules.27" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_ЗППроекты_КакБанковскиеСчета" configurationObjectName="Метаданные.Справочники.ЗарплатныеПроекты" formatObject="Справочник.БанковскиеСчета" forSending="true" onSendingEvent="&#x9;СтруктураСвойств = Неопределено;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;ЗарплатныеПроекты.Банк КАК Банк,&#xD;&#xA;&#x9;|&#x9;ЗарплатныеПроекты.РасчетныйСчет КАК РасчетныйСчет,&#xD;&#xA;&#x9;|&#x9;ЕСТЬNULL(ЗарплатныеПроекты.Банк.Код, &quot;&quot;&quot;&quot;) КАК БИКБанка,&#xD;&#xA;&#x9;|&#x9;ЕСТЬNULL(ЗарплатныеПроекты.Банк.ИНН, &quot;&quot;&quot;&quot;) КАК ИННБанка,&#xD;&#xA;&#x9;|&#x9;ЕСТЬNULL(ЗарплатныеПроекты.Банк.Наименование, &quot;&quot;&quot;&quot;) КАК НаименованиеБанка&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ЗарплатныеПроекты.Ссылка = &amp;Ссылка&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВалютаСчета = ДанныеИБ.Валюта;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(ВалютаСчета) Тогда&#xD;&#xA;&#x9;&#x9;ВалютаСчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;СтрокаНаименования = &quot;&quot;;&#xD;&#xA;&#x9;Если Выборка.Следующий() Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;Банк&quot;, Выборка.Банк);&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;НомерСчета&quot;, Выборка.РасчетныйСчет);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент = Новый Структура;&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент.Вставить(&quot;Ссылка&quot;, Выборка.Банк);&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент.Вставить(&quot;ИНН&quot;, Выборка.ИННБанка);&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент.Вставить(&quot;Наименование&quot;, Выборка.НаименованиеБанка);&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент.Вставить(&quot;НаименованиеПолное&quot;, Выборка.НаименованиеБанка);&#xD;&#xA;&#x9;&#x9;СтруктураКонтрагент.Вставить(&quot;ЮридическоеФизическоеЛицо&quot;, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;Владелец&quot;, Новый Структура(&quot;Значение, ИмяПКО&quot;, СтруктураКонтрагент, &quot;Справочник_Контрагенты_ИзСтруктуры&quot;));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаНаименования = Прав(СокрЛП(Выборка.РасчетныйСчет), 4) &#xD;&#xA;&#x9;&#x9;&#x9;+ ?(Не ПустаяСтрока(Выборка.НаименованиеБанка), &quot; в &quot; + Выборка.НаименованиеБанка, &quot;&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;+ &quot; (&quot; + Строка(ВалютаСчета) + &quot;)&quot;;&#xD;&#xA;&#x9;&#x9;СтрокаНаименования = Лев(СтрокаНаименования, 150);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ВалютаДенежныхСредств&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ВалютаСчета));&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Наименование&quot;, СтрокаНаименования);">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ЗарплатныеПроекты#/"/>
    <attributeRules formatAttribute="Банк" objectRule="//@objectRules.12" isCustomRule="true"/>
    <attributeRules formatAttribute="ВалютаДенежныхСредств" objectRule="//@objectRules.39" isCustomRule="true"/>
    <attributeRules formatAttribute="Владелец" isCustomRule="true"/>
    <attributeRules formatAttribute="Наименование" isCustomRule="true"/>
    <attributeRules formatAttribute="НомерСчета" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_ЗППроекты_КакКонтрагенты" configurationObjectName="Метаданные.Справочники.ЗарплатныеПроекты" formatObject="Справочник.Контрагенты" forSending="true" onSendingEvent="&#x9;СтруктураСвойств = Неопределено;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;СтруктураСвойств.Вставить(&quot;Ссылка&quot;, ДанныеИБ.Банк);&#xD;&#xA;&#x9;СтруктураСвойств.Вставить(&quot;ЮридическоеФизическоеЛицо&quot;, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;КлассификаторБанков.ИНН КАК ИНН,&#xD;&#xA;&#x9;|&#x9;КлассификаторБанков.Наименование КАК Наименование,&#xD;&#xA;&#x9;|&#x9;КлассификаторБанков.Наименование КАК НаименованиеПолное&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Справочник.КлассификаторБанков КАК КлассификаторБанков&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;КлассификаторБанков.Ссылка = &amp;Ссылка&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Банк);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Выборка.Следующий() Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;ИНН&quot;, Выборка.ИНН);&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;Наименование&quot;, Выборка.Наименование);&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(&quot;НаименованиеПолное&quot;, Выборка.НаименованиеПолное);&#xD;&#xA;&#x9;КонецЕсли;">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ЗарплатныеПроекты#/"/>
    <attributeRules formatAttribute="ИНН" isCustomRule="true"/>
    <attributeRules formatAttribute="Наименование" isCustomRule="true"/>
    <attributeRules formatAttribute="НаименованиеПолное" isCustomRule="true"/>
    <attributeRules formatAttribute="ЮридическоеФизическоеЛицо" objectRule="//@objectRules.43" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_Контрагенты" configurationObjectName="Метаданные.Справочники.Контрагенты" formatObject="Справочник.Контрагенты" forSending="true" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Контрагенты#/"/>
    <attributeRules configurationAttribute="ИНН" formatAttribute="ИНН"/>
    <attributeRules configurationAttribute="КодПоОКПО" formatAttribute="ОКПО"/>
    <attributeRules configurationAttribute="КПП" formatAttribute="КПП"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="НаименованиеПолное" formatAttribute="НаименованиеПолное"/>
    <attributeRules configurationAttribute="ЮридическоеФизическоеЛицо" formatAttribute="ЮридическоеФизическоеЛицо" objectRule="//@objectRules.43"/>
  </objectRules>
  <objectRules name="Справочник_Организации_Отправка" configurationObjectName="Метаданные.Справочники.Организации" formatObject="Справочник.Организации" forSending="true" onSendingEvent="&#x9;СтруктураКлючевыхСвойств = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;СтруктураКлючевыхСвойств = ДанныеXDTO;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеИБ.ГоловнаяОрганизация = ДанныеИБ.Ссылка Тогда&#xD;&#xA;&#x9;&#x9;СтруктураКлючевыхСвойств.Вставить(&quot;ГоловнаяОрганизация&quot;, Неопределено);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КодОКАТО = &quot;&quot;;&#xD;&#xA;&#x9;КПП = &quot;&quot;;&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ДанныеИБ.РегистрацияВНалоговомОргане) Тогда&#xD;&#xA;&#x9;&#x9;РеквизитыРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.РегистрацияВНалоговомОргане, &quot;КодПоОКАТО, КПП&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КодОКАТО = РеквизитыРегистрации.КодПоОКАТО;&#xD;&#xA;&#x9;&#x9;КПП = РеквизитыРегистрации.КПП;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;СтруктураКлючевыхСвойств.Вставить(&quot;КПП&quot;, КПП);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ПодготовитьДанныеКонтактнаяИнформация(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ОКАТО&quot;, КодОКАТО);" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Организации#/"/>
    <attributeRules configurationAttribute="ИНН" formatAttribute="ИНН"/>
    <attributeRules configurationAttribute="КодПоОКПО" formatAttribute="ОКПО"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="НаименованиеПолное" formatAttribute="НаименованиеПолное"/>
    <attributeRules configurationAttribute="НаименованиеСокращенное" formatAttribute="НаименованиеСокращенное"/>
    <attributeRules configurationAttribute="ОГРН" formatAttribute="ОГРН"/>
    <attributeRules configurationAttribute="Префикс" formatAttribute="Префикс"/>
    <attributeRules configurationAttribute="ЮридическоеФизическоеЛицо" formatAttribute="ЮридическоеФизическоеЛицо" objectRule="//@objectRules.43"/>
    <attributeRules formatAttribute="КПП" isCustomRule="true"/>
    <attributeRules formatAttribute="ОКАТО" isCustomRule="true"/>
    <attributeRules configurationAttribute="ГоловнаяОрганизация" formatAttribute="ГоловнаяОрганизация" objectRule="//@objectRules.20" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="ЗначениеСвойства" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="Свойство" objectRule="//@objectRules.41" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="ВидКонтактнойИнформации" objectRule="//@objectRules.44" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="ЗначенияПолей" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="НаименованиеКонтактнойИнформации" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_Подразделения_Отправка" configurationObjectName="Метаданные.Справочники.СтруктураПредприятия" formatObject="Справочник.Подразделения" forSending="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ТипЗнч(ДанныеИБ) = Тип(&quot;СправочникОбъект.СтруктураПредприятия&quot;) Тогда&#xD;&#xA;&#x9;&#x9;Если Не ДанныеИБ.Метаданные().ТабличныеЧасти.Найти(&quot;ДополнительныеРеквизиты&quot;) = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;" subsystems="//@subsystems.4 //@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СтруктураПредприятия#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="ВышестоящееПодразделение" objectRule="//@objectRules.21"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="ЗначениеСвойства" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="Свойство" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_Пользователи" configurationObjectName="Метаданные.Справочники.Пользователи" formatObject="Справочник.Пользователи" forSending="true" forReceiving="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;ФизическоеЛицо&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.ФизическоеЛицо));&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;ФизическоеЛицо&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.ФизическоеЛицо));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);" beforeReceivingEvent="&#x9;ФизЛицо = Неопределено;&#xD;&#xA;&#x9;Если ДанныеXDTO.КлючевыеСвойства.Свойство(&quot;ФизическоеЛицо&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ФизЛицо = ДанныеXDTO.КлючевыеСвойства.ФизическоеЛицо;&#xD;&#xA;&#x9;ИначеЕсли ДанныеXDTO.Свойство(&quot;ФизическоеЛицо&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ФизЛицо = ДанныеXDTO.ФизическоеЛицо;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Не ФизЛицо = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;Результат = ЗначениеВИнструкциюПКО(КомпонентыОбмена, ФизЛицо);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не Результат = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ФизическоеЛицо&quot;, Результат);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена, Истина);" onReceivingEvent="&#x9;ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка), &#xD;&#xA;&#x9;                            ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Пользователи#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules formatAttribute="ФизическоеЛицо" objectRule="//@objectRules.27" isCustomRule="true"/>
    <attributeRules configurationAttribute="ФизическоеЛицо" objectRule="//@objectRules.36" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Значение" formatTabularSection="ДополнительныеРеквизиты" formatAttribute="ЗначениеСвойства" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Свойство" formatTabularSection="ДополнительныеРеквизиты" formatAttribute="Свойство" objectRule="//@objectRules.41" isCustomRule="true"/>
    <identificationFields>ФизическоеЛицо,Наименование</identificationFields>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_РегистрацииВНалоговомОргане" configurationObjectName="Метаданные.Справочники.РегистрацииВНалоговомОргане" formatObject="Справочник.РегистрацииВНалоговомОргане" forSending="true" forReceiving="true" onSendingEvent="&#x9;ОрганизацияИнструкция = Новый Структура(&quot;Значение, ИмяПКО&quot;, ДанныеИБ.Владелец, &quot;Справочник_Организации_Отправка&quot;);&#xD;&#xA;&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.РегистрацииВНалоговомОргане.КлючевыеСвойства.Организация&quot;)&#xD;&#xA;&#x9;&#x9;И СтекВыгрузки.Количество() = 1 Тогда&#x9;&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Организация&quot;, ОрганизацияИнструкция);&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;Организация&quot;, ОрганизацияИнструкция);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;НаименованиеОбособленногоПодразделения = Неопределено;&#xD;&#xA;&#x9;&#x9;Если Не ДанныеXDTO.Свойство(&quot;НаименованиеОбособленногоПодразделения&quot;, НаименованиеОбособленногоПодразделения)&#xD;&#xA;&#x9;&#x9;&#x9;Или Не ЗначениеЗаполнено(НаименованиеОбособленногоПодразделения) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;НаименованиеОбособленногоПодразделения&quot;, ДанныеИБ.НаименованиеИФНС);&#xD;&#xA;&#x9;&#x9;КонецЕсли; &#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;НаименованиеОбособленногоПодразделения = Неопределено;&#xD;&#xA;&#x9;Если Не ДанныеXDTO.КлючевыеСвойства.Свойство(&quot;НаименованиеОбособленногоПодразделения&quot;, НаименованиеОбособленногоПодразделения)&#xD;&#xA;&#x9;&#x9;Или Не ЗначениеЗаполнено(НаименованиеОбособленногоПодразделения) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;НаименованиеОбособленногоПодразделения&quot;, ДанныеИБ.НаименованиеИФНС);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Представитель&quot;);&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ДанныеИБ.Представитель) Тогда&#xD;&#xA;&#x9;&#x9;ПредставительИнструкция = ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.Представитель);&#xD;&#xA;&#x9;&#x9;Если Не ПредставительИнструкция = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеXDTO.Представитель = ПредставительИнструкция;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Доверенность&quot;);&#xD;&#xA;&#x9;Если ЗначениеЗаполнено(ДанныеИБ.Доверенность) Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.Доверенность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Доверенность, &quot;Наименование&quot;);&#xD;&#xA;&#x9;КонецЕсли;" beforeReceivingEvent="&#x9;СтруктураСвойств = Неопределено;&#xD;&#xA;&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.РегистрацииВНалоговомОргане.КлючевыеСвойства.Организация&quot;) Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтруктураСвойств.Свойство(&quot;Организация&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;Владелец&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, СтруктураСвойств.Организация));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если СтруктураСвойств.Организация.Свойство(&quot;КПП&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;И СтруктураСвойств.Организация.КПП = ПолученныеДанные.КПП Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ЭтоОсновнаяРегистрация&quot;, Истина);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;Представитель&quot;)&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеXDTO.Представитель) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;Представитель&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеXDTO.Представитель));&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;Доверенность&quot;)&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеXDTO.Доверенность) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ДоверенностьНаименование&quot;, ДанныеXDTO.Доверенность);&#xD;&#xA;&#x9;КонецЕсли;" onReceivingEvent="&#x9;Если ПолученныеДанные.ДополнительныеСвойства.Свойство(&quot;ЭтоОсновнаяРегистрация&quot;)&#xD;&#xA;&#x9;&#x9;И Не ДанныеИБ = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;ДанныеИБ.ДополнительныеСвойства.Вставить(&quot;ЭтоОсновнаяРегистрация&quot;, Истина);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДоверенностьНаименование = &quot;&quot;;&#xD;&#xA;&#x9;Если ПолученныеДанные.ДополнительныеСвойства.Свойство(&quot;ДоверенностьНаименование&quot;, ДоверенностьНаименование) Тогда&#xD;&#xA;&#x9;&#x9;СсылкаДоверенность = Справочники.ДоверенностиНалогоплательщика.НайтиПоНаименованию(ДоверенностьНаименование, Истина, , ПолученныеДанные.Владелец);&#xD;&#xA;&#x9;&#x9;Если Не СсылкаДоверенность.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.Доверенность = СсылкаДоверенность;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;" afterReceivingAlgorithm="//@algorithms.6" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.РегистрацииВНалоговомОргане#/"/>
    <attributeRules configurationAttribute="ДокументПредставителя" formatAttribute="ДокументПредставителя"/>
    <attributeRules configurationAttribute="Код" formatAttribute="КодНалоговогоОргана"/>
    <attributeRules configurationAttribute="КодПоОКАТО" formatAttribute="ОКАТО"/>
    <attributeRules configurationAttribute="КодПоОКТМО" formatAttribute="ОКТМО"/>
    <attributeRules configurationAttribute="КПП" formatAttribute="КПП"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="КраткоеНаименованиеНалоговогоОргана"/>
    <attributeRules configurationAttribute="НаименованиеИФНС" formatAttribute="НаименованиеИФНС"/>
    <attributeRules configurationAttribute="УполномоченноеЛицоПредставителя" formatAttribute="УполномоченноеЛицоПредставителя"/>
    <attributeRules formatAttribute="Доверенность" isCustomRule="true"/>
    <attributeRules formatAttribute="Организация" isCustomRule="true"/>
    <attributeRules formatAttribute="Представитель" isCustomRule="true"/>
    <attributeRules configurationAttribute="Владелец" isCustomRule="true"/>
    <attributeRules configurationAttribute="Доверенность" isCustomRule="true"/>
    <attributeRules configurationAttribute="НаименованиеОбособленногоПодразделения" formatAttribute="НаименованиеОбособленногоПодразделения" isCustomRule="true"/>
    <attributeRules configurationAttribute="Представитель" isCustomRule="true"/>
    <identificationFields>Владелец,Код,КПП</identificationFields>
    <identificationFields>Владелец,Код</identificationFields>
  </objectRules>
  <objectRules name="Справочник_СпособыОтраженияЗарплатыВБухУчете" configurationObjectName="Метаданные.Справочники.СпособыОтраженияЗарплатыВБухУчете" formatObject="Справочник.СпособыОтраженияЗарплатыВФинансовомУчете" forSending="true" forReceiving="true" onSendingEvent="&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// В УП и ЗУП структура справочника различается&#xD;&#xA;&#x9;Результат = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеИБ.Метаданные().Иерархический Тогда&#xD;&#xA;&#x9;&#x9;Результат = ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.Родитель);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Группа&quot;, Результат);" beforeReceivingEvent="&#x9;// В УП и ЗУП структура справочника различается&#xD;&#xA;&#x9;Группа = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;Группа&quot;, Группа) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не Группа = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И ПолученныеДанные.Метаданные().Иерархический Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;Родитель&quot;, Новый Структура(&quot;Значение, ИмяПКО&quot;, Группа, &quot;Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа&quot;));&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СпособыОтраженияЗарплатыВБухУчете#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules formatAttribute="Группа" isCustomRule="true"/>
    <attributeRules configurationAttribute="Родитель" objectRule="//@objectRules.25" isCustomRule="true"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа" configurationObjectName="Метаданные.Справочники.СпособыОтраженияЗарплатыВБухУчете" formatObject="Справочник.СпособыОтраженияЗарплатыВФинансовомУчетеГруппа" forSending="true" forReceiving="true" forGroup="true" onSendingEvent="&#x9;// В УП и ЗУП структура справочника различается&#xD;&#xA;&#x9;Результат = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеИБ.Метаданные().Иерархический Тогда&#xD;&#xA;&#x9;&#x9;Результат = ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.Родитель);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;Группа&quot;, Результат);&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Группа&quot;, Результат);&#xD;&#xA;&#x9;КонецЕсли;" beforeReceivingEvent="&#x9;// В УП и ЗУП структура справочника различается&#xD;&#xA;&#x9;Группа = Неопределено;&#xD;&#xA;&#x9;Если ДанныеXDTO.КлючевыеСвойства.Свойство(&quot;Группа&quot;, Группа)&#xD;&#xA;&#x9;&#x9;Или ДанныеXDTO.Свойство(&quot;Группа&quot;, Группа) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не Группа = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И ПолученныеДанные.Метаданные().Иерархический Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;Родитель&quot;, Новый Структура(&quot;Значение, ИмяПКО&quot;, Группа, &quot;Справочник_СпособыОтраженияЗарплатыВБухУчетеГруппа&quot;));&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СпособыОтраженияЗарплатыВБухУчете#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules formatAttribute="Группа" objectRule="//@objectRules.25" isCustomRule="true"/>
    <attributeRules configurationAttribute="Родитель" objectRule="//@objectRules.25" isCustomRule="true"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ФизическиеЛицаГруппа_Отправка" configurationObjectName="Метаданные.Справочники.ФизическиеЛица" formatObject="Справочник.ФизическиеЛицаГруппа" forSending="true" forReceiving="true" forGroup="true" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ФизическиеЛица#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ФизическиеЛица_Отправка" configurationObjectName="Метаданные.Справочники.ФизическиеЛица" formatObject="Справочник.ФизическиеЛица" forSending="true" onSendingEvent="&#x9;#Область ФИО&#xD;&#xA;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;ФИО&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ОбщегоНазначения.ЕстьРеквизитОбъекта(&quot;ФИО&quot;, ДанныеИБ.Метаданные()) Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.ФИО = ДанныеИБ.ФИО;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(ДанныеXDTO.КлючевыеСвойства.ФИО)&#xD;&#xA;&#x9;&#x9;Или (Не СокрЛП(ДанныеXDTO.КлючевыеСвойства.ФИО) = СокрЛП(ДанныеИБ.Наименование)) Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.ФИО = ДанныеИБ.Наименование;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;#КонецОбласти&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.КлючевыеСвойства.Фамилия&quot;)&#xD;&#xA;&#x9;&#x9;И СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.КлючевыеСвойства.Имя&quot;)&#xD;&#xA;&#x9;&#x9;И СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.КлючевыеСвойства.Отчество&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Фамилия&quot;);&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Имя&quot;);&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;Отчество&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ЗаполнитьЗначенияСвойств(ДанныеXDTO.КлючевыеСвойства, ДанныеИБ, &quot;Фамилия, Имя, Отчество&quot;);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;ДатаРегистрации&quot;);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;МестоРождения&quot;);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;НаименованиеСлужебное&quot;);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;СтраховойНомерПФР&quot;);&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;УточнениеНаименования&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ЗаполнитьЗначенияСвойств(ДанныеXDTO, ДанныеИБ, &quot;ДатаРегистрации, МестоРождения, НаименованиеСлужебное, СтраховойНомерПФР, УточнениеНаименования&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ПодготовитьДанныеКонтактнаяИнформация(ДанныеИБ, ДанныеXDTO);&#xD;&#xA;&#x9;ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);&#xD;&#xA;&#x9;ВыгрузитьПодробныеДанныеФИО(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ФизическиеЛица#/"/>
    <attributeRules configurationAttribute="ДатаРождения" formatAttribute="ДатаРождения"/>
    <attributeRules configurationAttribute="ИНН" formatAttribute="ИНН"/>
    <attributeRules configurationAttribute="Пол" formatAttribute="Пол" objectRule="//@objectRules.45"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="Группа" objectRule="//@objectRules.26"/>
    <attributeRules formatAttribute="ДатаРегистрации" isCustomRule="true"/>
    <attributeRules formatAttribute="Имя" isCustomRule="true"/>
    <attributeRules formatAttribute="МестоРождения" isCustomRule="true"/>
    <attributeRules formatAttribute="НаименованиеСлужебное" isCustomRule="true"/>
    <attributeRules formatAttribute="Отчество" isCustomRule="true"/>
    <attributeRules formatAttribute="СтраховойНомерПФР" isCustomRule="true"/>
    <attributeRules formatAttribute="УточнениеНаименования" isCustomRule="true"/>
    <attributeRules formatAttribute="Фамилия" isCustomRule="true"/>
    <attributeRules formatAttribute="ФИО" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДанныеФИО" formatAttribute="Имя" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДанныеФИО" formatAttribute="НачалоПериода" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДанныеФИО" formatAttribute="Отчество" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДанныеФИО" formatAttribute="Фамилия" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="ЗначениеСвойства" isCustomRule="true"/>
    <attributeRules formatTabularSection="ДополнительныеРеквизиты" formatAttribute="Свойство" objectRule="//@objectRules.41" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="ВидКонтактнойИнформации" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="ЗначенияПолей" isCustomRule="true"/>
    <attributeRules formatTabularSection="КонтактнаяИнформация" formatAttribute="НаименованиеКонтактнойИнформации" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Документ_ДанныеДляРасчетаЗарплаты_Получение" configurationObjectName="Метаданные.Документы.ДанныеДляРасчетаЗарплаты" formatObject="Документ.ВыработкаСотрудников" forReceiving="true" beforeReceivingEvent="&#x9;ПолученныеДанные.Проведен = Истина;&#xD;&#xA;&#x9;ПолученныеДанные.Период   = КонецМесяца(ПолученныеДанные.Дата);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ПравилоКонвертацииФизЛица_Получение = КомпонентыОбмена.ПравилаКонвертацииОбъектов.Найти(&quot;Справочник_ФизическиеЛица_Получение&quot;, &quot;ИмяПКО&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВыполненныеРаботыXDTO = Неопределено;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;ВыполненныеРаботы&quot;, ВыполненныеРаботыXDTO)&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ВыполненныеРаботыXDTO)&#xD;&#xA;&#x9;&#x9;И Не ПравилоКонвертацииФизЛица_Получение = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ВыполненныеРаботыXDTO.Колонки.Добавить(&quot;ФизическоеЛицоСсылка&quot;, Новый ОписаниеТипов(&quot;СправочникСсылка.ФизическиеЛица&quot;));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаВыполненныеРаботыXDTO Из ВыполненныеРаботыXDTO Цикл&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботыXDTO.ФизическоеЛицоСсылка = ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботыXDTO.ФизическоеЛицо, ПравилоКонвертацииФизЛица_Получение, &quot;ПолучитьСсылку&quot;);&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТаблицаСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ВыполненныеРаботыXDTO.ВыгрузитьКолонку(&quot;ФизическоеЛицоСсылка&quot;), Ложь, ПолученныеДанные.Организация, ПолученныеДанные.Дата);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(&#xD;&#xA;&#x9;&#x9;&#x9;Ложь,&#xD;&#xA;&#x9;&#x9;&#x9;ТаблицаСотрудники.ВыгрузитьКолонку(&quot;Сотрудник&quot;),&#xD;&#xA;&#x9;&#x9;&#x9;&quot;МестоВСтруктуреПредприятия, Подразделение&quot;,&#xD;&#xA;&#x9;&#x9;&#x9;КонецМесяца(ПолученныеДанные.Дата));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;&#x9;ПропуститьПодразделение = Ложь;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ВыполненныеРаботы = Новый Массив;&#xD;&#xA;&#x9;&#x9;ФизическиеЛица    = Новый Массив;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаВыполненныеРаботыXDTO Из ВыполненныеРаботыXDTO Цикл&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы = Новый Структура;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаСотрудники = ТаблицаСотрудники.Найти(СтрокаВыполненныеРаботыXDTO.ФизическоеЛицоСсылка, &quot;ФизическоеЛицо&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;Если Не СтрокаСотрудники = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;Сотрудник&quot;, СтрокаСотрудники.Сотрудник);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если Не ПропуститьПодразделение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;СтрокаКадровыеДанные = КадровыеДанные.Найти(СтрокаВыполненныеРаботы.Сотрудник, &quot;Сотрудник&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Если Не СтрокаКадровыеДанные = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Если Подразделение = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Подразделение = СтрокаКадровыеДанные.Подразделение;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ИначеЕсли Не Подразделение = СтрокаКадровыеДанные.Подразделение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ПропуститьПодразделение = Истина;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;Период&quot;, ПолученныеДанные.Дата);&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;ВидРабот&quot;, Новый Структура(&quot;ИмяПКО, Значение&quot;, &quot;Справочник_ВидыРаботСотрудников&quot;, СтрокаВыполненныеРаботыXDTO.ВидРабот));&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;ОбъемВыполненныхРабот&quot;, СтрокаВыполненныеРаботыXDTO.Количество);&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;Расценка&quot;, СтрокаВыполненныеРаботыXDTO.Расценка);&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаВыполненныеРаботы.Вставить(&quot;Сумма&quot;, СтрокаВыполненныеРаботыXDTO.Сумма);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаФизическиеЛица = Новый Структура;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаФизическиеЛица.Вставить(&quot;ФизическоеЛицо&quot;, СтрокаВыполненныеРаботыXDTO.ФизическоеЛицоСсылка);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ВыполненныеРаботы.Добавить(СтрокаВыполненныеРаботы);&#xD;&#xA;&#x9;&#x9;&#x9;ФизическиеЛица.Добавить(СтрокаФизическиеЛица);&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ВыполненныеРаботы.Количество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ВыполненныеРаботы&quot;, ВыполненныеРаботы);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ФизическиеЛица.Количество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ФизическиеЛица&quot;, ФизическиеЛица);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не ПропуститьПодразделение&#xD;&#xA;&#x9;&#x9;&#x9;И Не Подразделение = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.Подразделение = Подразделение;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;" afterReceivingAlgorithm="//@algorithms.0">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ДанныеДляРасчетаЗарплаты#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Комментарий" formatAttribute="Комментарий"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.34"/>
    <attributeRules configurationAttribute="Ответственный" formatAttribute="Ответственный" objectRule="//@objectRules.22"/>
    <attributeRules configurationAttribute="Период" isCustomRule="true"/>
    <attributeRules configurationAttribute="Подразделение" isCustomRule="true"/>
    <attributeRules configurationAttribute="Проведен" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="ВидРабот" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="ОбъемВыполненныхРабот" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="Период" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="Расценка" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="Сотрудник" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ВыполненныеРаботы" configurationAttribute="Сумма" isCustomRule="true"/>
    <identificationFields>Дата,Номер</identificationFields>
  </objectRules>
  <objectRules name="Документ_ПБДСРасчетыССотрудниками" configurationObjectName="Метаданные.Документы.ПогашениеЗаймаСотруднику" formatObject="Документ.ПБДСРасчетыССотрудниками" forReceiving="true">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ПогашениеЗаймаСотруднику#/"/>
  </objectRules>
  <objectRules name="Документ_ПКОРасчетыССотрудниками" configurationObjectName="Метаданные.Документы.ПогашениеЗаймаСотруднику" formatObject="Документ.ПКОРасчетыССотрудниками" forReceiving="true">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ПогашениеЗаймаСотруднику#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.46"/>
  </objectRules>
  <objectRules name="Документ_РКОРасчетыССотрудниками" configurationObjectName="Метаданные.Документы.ВыдачаЗаймаСотруднику" formatObject="Документ.РКОРасчетыССотрудниками" forReceiving="true">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВыдачаЗаймаСотруднику#/"/>
    <attributeRules configurationAttribute="Дата" formatAttribute="Дата"/>
    <attributeRules configurationAttribute="Номер" formatAttribute="Номер"/>
    <attributeRules configurationAttribute="Организация" formatAttribute="Организация" objectRule="//@objectRules.46"/>
  </objectRules>
  <objectRules name="Документ_СБДСРасчетыССотрудниками" configurationObjectName="Метаданные.Документы.ВыдачаЗаймаСотруднику" formatObject="Документ.СБДСРасчетыССотрудниками" forReceiving="true">
    <configurationObject xsi:type="mdclass:Document" href="bm://Демо_ЗУП_319/Document.ВыдачаЗаймаСотруднику#/"/>
  </objectRules>
  <objectRules name="Справочник_БанкиГруппа" configurationObjectName="Метаданные.Справочники.КлассификаторБанков" formatObject="Справочник.Банки" forSending="true" forReceiving="true" forGroup="true" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.КлассификаторБанков#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_Организации_Получение" configurationObjectName="Метаданные.Справочники.Организации" formatObject="Справочник.Организации" forReceiving="true" beforeReceivingEvent="&#x9;Если ДанныеXDTO.Свойство(&quot;ОКАТО&quot;) И ЗначениеЗаполнено(ДанныеXDTO.ОКАТО) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ОКАТО&quot;, ДанныеXDTO.ОКАТО);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.КлючевыеСвойства.Свойство(&quot;КПП&quot;) И ЗначениеЗаполнено(ДанныеXDTO.КлючевыеСвойства.КПП) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;КПП&quot;, ДанныеXDTO.КлючевыеСвойства.КПП);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена, Истина);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Не ДанныеXDTO.Свойство(&quot;КонтактнаяИнформация&quot;)&#xD;&#xA;&#x9;&#x9;Или Не ЗначениеЗаполнено(ДанныеXDTO.КонтактнаяИнформация) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;Для Каждого СтрокаXDTO Из ДанныеXDTO.КонтактнаяИнформация Цикл&#xD;&#xA;&#x9;&#x9;ВидКИСтрокой = СтрокаXDTO.ВидКонтактнойИнформации.Значение;&#xD;&#xA;&#x9;&#x9;Если Лев(СокрЛП(ВидКИСтрокой),18) = &quot;ПользовательскаяКИ&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию(СтрокаXDTO.НаименованиеКонтактнойИнформации,,Справочники.ВидыКонтактнойИнформации.СправочникОрганизации);&#xD;&#xA;&#x9;&#x9;&#x9;Если НЕ ЗначениеЗаполнено(ТекВидКИ) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект = Справочники.ВидыКонтактнойИнформации.СоздатьЭлемент();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Наименование = СтрокаXDTO.НаименованиеКонтактнойИнформации;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ИмяТипаКИ = СтрЗаменить(СокрЛП(ВидКИСтрокой),&quot;ПользовательскаяКИ&quot;,&quot;&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Тип = Перечисления.ТипыКонтактнойИнформации[ИмяТипаКИ];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Используется = Истина;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Записать();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = ВидКИОбъект.Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;АдресЭлектроннойПочты&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.EmailОрганизации;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ПочтовыйАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ФактическийАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ЮридическийАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;Телефон&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации;&#xD;&#xA;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;Факс&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;ТекТипКИ = ТекВидКИ.Тип;&#xD;&#xA;&#x9;&#x9;СтрокаКИ = ПолученныеДанные.КонтактнаяИнформация.Добавить();&#xD;&#xA;&#x9;&#x9;ЗначенияПолейСтрокой = СокрЛП(СтрокаXDTO.ЗначенияПолей);&#xD;&#xA;&#x9;&#x9;СтрокаКИ.ЗначенияПолей = ЗначенияПолейСтрокой;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.Вид = ТекВидКИ;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.Тип = ТекТипКИ;&#xD;&#xA;&#x9;&#x9;ЗаполнитьСтрокуКонтактнойИнформацией(СтрокаКИ);&#xD;&#xA;&#x9;КонецЦикла;" onReceivingEvent="&#x9;Если Не ДанныеИБ = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;Если ПолученныеДанные.ДополнительныеСвойства.Свойство(&quot;ОКАТО&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеИБ.ДополнительныеСвойства.Вставить(&quot;ОКАТО&quot;, ПолученныеДанные.ДополнительныеСвойства.ОКАТО);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;Если ПолученныеДанные.ДополнительныеСвойства.Свойство(&quot;КПП&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеИБ.ДополнительныеСвойства.Вставить(&quot;КПП&quot;, ПолученныеДанные.ДополнительныеСвойства.КПП);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка), &#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);" afterReceivingAlgorithm="//@algorithms.1" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Организации#/"/>
    <attributeRules configurationAttribute="ГоловнаяОрганизация" formatAttribute="ГоловнаяОрганизация" objectRule="//@objectRules.34"/>
    <attributeRules configurationAttribute="ИНН" formatAttribute="ИНН"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="НаименованиеПолное" formatAttribute="НаименованиеПолное"/>
    <attributeRules configurationAttribute="НаименованиеСокращенное" formatAttribute="НаименованиеСокращенное"/>
    <attributeRules configurationAttribute="ОГРН" formatAttribute="ОГРН"/>
    <attributeRules configurationAttribute="Префикс" formatAttribute="Префикс"/>
    <attributeRules configurationAttribute="ЮридическоеФизическоеЛицо" formatAttribute="ЮридическоеФизическоеЛицо" objectRule="//@objectRules.43"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Значение" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Свойство" objectRule="//@objectRules.41" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="Вид" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="ЗначенияПолей" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="Представление" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="Тип" isCustomRule="true"/>
    <identificationFields>ИНН</identificationFields>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_Подразделения_Получение" configurationObjectName="Метаданные.Справочники.СтруктураПредприятия" formatObject="Справочник.Подразделения" forReceiving="true" onReceivingEvent="&#x9;ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка), &#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);" afterReceivingAlgorithm="//@algorithms.2" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска" subsystems="//@subsystems.4 //@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.СтруктураПредприятия#/"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="ВышестоящееПодразделение" objectRule="//@objectRules.35"/>
    <identificationFields>Наименование,Родитель</identificationFields>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ФизическиеЛица_Получение" configurationObjectName="Метаданные.Справочники.ФизическиеЛица" formatObject="Справочник.ФизическиеЛица" forReceiving="true" beforeReceivingEvent="&#x9;ПолучитьКонтактнуюИнформациюФизическогоЛица(ДанныеXDTO, ПолученныеДанные);&#xD;&#xA;&#x9;ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена, Истина);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.ДанныеФИО&quot;) Тогда&#xD;&#xA;&#x9;&#x9;Если ДанныеXDTO.Свойство(&quot;ДанныеФИО&quot;) И ДанныеXDTO.ДанныеФИО.Количество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ПодробныеДанныеФИО&quot;, ДанныеXDTO.ДанныеФИО);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;ДатаРегистрации&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДатаРегистрации = ДанныеXDTO.ДатаРегистрации;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;МестоРождения&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.МестоРождения = ДанныеXDTO.МестоРождения;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;НаименованиеСлужебное&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.НаименованиеСлужебное = ДанныеXDTO.НаименованиеСлужебное;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;СтраховойНомерПФР&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.СтраховойНомерПФР = ДанныеXDTO.СтраховойНомерПФР;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ДанныеXDTO.Свойство(&quot;УточнениеНаименования&quot;) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.УточнениеНаименования = ДанныеXDTO.УточнениеНаименования;&#xD;&#xA;&#x9;КонецЕсли;" onReceivingEvent="&#x9;Если НЕ ЗначениеЗаполнено(ПолученныеДанные.ФИО) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ФИО = ПолученныеДанные.Наименование;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеИБ &lt;> Неопределено Тогда&#xD;&#xA;&#x9;&#x9;СтрокаРеквизиты = &quot;МестоРождения, СтраховойНомерПФР, УточнениеНаименования, ФИО&quot;;&#xD;&#xA;&#x9;&#x9;ЗаполнитьРеквизиты(ДанныеИБ, ПолученныеДанные, СтрокаРеквизиты, Истина);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ФизЛицоСсылка = ?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;ЗагрузитьДополнительныеСведения(ФизЛицоСсылка, ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);&#xD;&#xA;&#x9;ЗагрузитьПодробныеДанныеФИО(КомпонентыОбмена, ПолученныеДанные, ФизЛицоСсылка);" afterReceivingAlgorithm="//@algorithms.3" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ФизическиеЛица#/"/>
    <attributeRules configurationAttribute="ДатаРождения" formatAttribute="ДатаРождения"/>
    <attributeRules configurationAttribute="ИНН" formatAttribute="ИНН"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="ФИО"/>
    <attributeRules configurationAttribute="Пол" formatAttribute="Пол" objectRule="//@objectRules.45"/>
    <attributeRules configurationAttribute="Родитель" formatAttribute="Группа" objectRule="//@objectRules.26"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Значение" isCustomRule="true"/>
    <attributeRules configurationTabularSection="ДополнительныеРеквизиты" configurationAttribute="Свойство" objectRule="//@objectRules.41" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="Вид" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="ЗначенияПолей" isCustomRule="true"/>
    <attributeRules configurationTabularSection="КонтактнаяИнформация" configurationAttribute="Тип" isCustomRule="true"/>
    <identificationFields>ИНН,ЭтоГруппа</identificationFields>
    <identificationFields>СтраховойНомерПФР,ЭтоГруппа</identificationFields>
    <identificationFields>ФИО,ЭтоГруппа,ДатаРождения</identificationFields>
    <identificationFields>ФИО,ЭтоГруппа</identificationFields>
    <identificationFields>Наименование,ЭтоГруппа</identificationFields>
  </objectRules>
  <objectRules name="Справочник_Контрагенты_ИзСтруктуры" formatObject="Справочник.Контрагенты" forSending="true" onSendingEvent="&#x9;СтруктураСвойств = Неопределено;&#xD;&#xA;&#x9;Если СтекВыгрузки.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;СтруктураСвойств = ДанныеXDTO.КлючевыеСвойства;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Для Каждого ТекСвойство Из ДанныеИБ Цикл&#xD;&#xA;&#x9;&#x9;СтруктураСвойств.Вставить(ТекСвойство.Ключ, ТекСвойство.Значение);&#xD;&#xA;&#x9;КонецЦикла;">
    <attributeRules formatAttribute="ИНН" isCustomRule="true"/>
    <attributeRules formatAttribute="Наименование" isCustomRule="true"/>
    <attributeRules formatAttribute="НаименованиеПолное" isCustomRule="true"/>
    <attributeRules formatAttribute="ЮридическоеФизическоеЛицо" objectRule="//@objectRules.43" isCustomRule="true"/>
  </objectRules>
  <objectRules name="Справочник_Подразделения_ИзСтруктуры" formatObject="Справочник.Подразделения" forSending="true">
    <attributeRules formatAttribute="Наименование"/>
  </objectRules>
  <objectRules name="Справочник_Валюты" configurationObjectName="Метаданные.Справочники.Валюты" formatObject="Справочник.Валюты" forSending="true" forReceiving="true" beforeReceivingEvent="&#x9;ПолученныеДанные.СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РучнойВвод;" onReceivingEvent="&#x9;Если ДанныеИБ &lt;> Неопределено&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеИБ.СпособУстановкиКурса) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.СпособУстановкиКурса = ДанныеИБ.СпособУстановкиКурса;&#xD;&#xA;&#x9;КонецЕсли;" afterReceivingAlgorithm="//@algorithms.4" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.Валюты#/"/>
    <attributeRules configurationAttribute="Код" formatAttribute="Код"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="НаименованиеПолное" formatAttribute="НаименованиеПолное"/>
    <attributeRules configurationAttribute="ПараметрыПрописиНаРусском" formatAttribute="ПараметрыПрописиНаРусском"/>
    <identificationFields>Код</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ВидыДокументовФизическихЛиц" configurationObjectName="Метаданные.Справочники.ВидыДокументовФизическихЛиц" formatObject="Справочник.ВидыДокументовФизическихЛиц" forSending="true" forReceiving="true" onSendingEvent="&#x9;ВидДокументаИзКлассификатора = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ДанныеИБ.Предопределенный&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеИБ.ИмяПредопределенныхДанных) Тогда&#xD;&#xA;&#x9;&#x9;ВидДокументаИзКлассификатора = ДанныеИБ.ИмяПредопределенныхДанных;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.КлючевыеСвойства.Вставить(&quot;ВидДокументаИзКлассификатора&quot;, ВидДокументаИзКлассификатора);" identificationVariant="По полям поиска" subsystems="//@subsystems.10">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ВидыДокументовФизическихЛиц#/"/>
    <attributeRules configurationAttribute="КодМВД" formatAttribute="КодМВД"/>
    <attributeRules configurationAttribute="КодПФР" formatAttribute="КодПФР"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules formatAttribute="ВидДокументаИзКлассификатора" isCustomRule="true"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ДополнительныеРеквизиты" configurationObjectName="Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения" formatObject="Справочник.ДополнительныеРеквизиты" forSending="true" forReceiving="true" onReceivingEvent="&#x9;Если НЕ ЗначениеЗаполнено(ПолученныеДанные.Заголовок) Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.Заголовок = ПолученныеДанные.Наименование;&#xD;&#xA;&#x9;КонецЕсли;" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:ChartOfCharacteristicTypes" href="bm://Демо_ЗУП_319/ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения#/"/>
    <attributeRules configurationAttribute="ВладелецДополнительныхЗначений" formatAttribute="ВладелецДополнительныхЗначений" objectRule="//@objectRules.41"/>
    <attributeRules configurationAttribute="ДополнительныеЗначенияИспользуются" formatAttribute="ДополнительныеЗначенияИспользуются"/>
    <attributeRules configurationAttribute="ДополнительныеЗначенияСВесом" formatAttribute="ДополнительныеЗначенияСВесом"/>
    <attributeRules configurationAttribute="Заголовок" formatAttribute="Заголовок"/>
    <attributeRules configurationAttribute="ЗаголовокФормыВыбораЗначения" formatAttribute="ЗаголовокФормыВыбораЗначения"/>
    <attributeRules configurationAttribute="ЗаголовокФормыЗначения" formatAttribute="ЗаголовокФормыЗначения"/>
    <attributeRules configurationAttribute="ЗаполнятьОбязательно" formatAttribute="ЗаполнятьОбязательно"/>
    <attributeRules configurationAttribute="Комментарий" formatAttribute="Комментарий"/>
    <attributeRules configurationAttribute="МногострочноеПолеВвода" formatAttribute="МногострочноеПолеВвода"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <attributeRules configurationAttribute="Подсказка" formatAttribute="Подсказка"/>
    <attributeRules configurationAttribute="ФорматСвойства" formatAttribute="ФорматСвойства"/>
    <attributeRules configurationAttribute="ЭтоДополнительноеСведение" formatAttribute="ЭтоДополнительноеСведение"/>
    <identificationFields>Наименование</identificationFields>
  </objectRules>
  <objectRules name="Справочник_ЗначенияДополнительныхРеквизитов" configurationObjectName="Метаданные.Справочники.ЗначенияСвойствОбъектов" formatObject="Справочник.ЗначенияДополнительныхРеквизитов" forSending="true" forReceiving="true" identificationVariant="Сначала по уникальному идентификатору потом по полям поиска">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ЗначенияСвойствОбъектов#/"/>
    <attributeRules configurationAttribute="Вес" formatAttribute="Вес"/>
    <attributeRules configurationAttribute="Владелец" formatAttribute="Владелец" objectRule="//@objectRules.41"/>
    <attributeRules configurationAttribute="Наименование" formatAttribute="Наименование"/>
    <identificationFields>Наименование,Владелец</identificationFields>
  </objectRules>
  <objectRules name="Перечисление_ЮридическоеФизическоеЛицо"/>
  <objectRules name="ВидыКонтактнойИнформации"/>
  <objectRules name="ПолФизическогоЛица"/>
  <objectRules name="Справочник_Организации"/>
  <predefineds name="ВидыКонтактнойИнформации" configurationObjectName="Метаданные.Справочники.ВидыКонтактнойИнформации" formatObject="ВидыКИ" forSending="true" forReceiving="true">
    <configurationObject xsi:type="mdclass:Catalog" href="bm://Демо_ЗУП_319/Catalog.ВидыКонтактнойИнформации#/"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.EmailОрганизации" formatValue="АдресЭлектроннойПочты"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.EmailПользователя" formatValue="АдресЭлектроннойПочты"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица" formatValue="АдресЭлектроннойПочты"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица" formatValue="ПочтовыйАдрес"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица" formatValue="ФактическийАдрес"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица" formatValue="ЮридическийАдрес"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации" formatValue="ПочтовыйАдрес"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица" formatValue="ТелефонДомашний"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица" formatValue="Телефон"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации" formatValue="Телефон"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ТелефонПользователя" formatValue="Телефон"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица" formatValue="ТелефонРабочий"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ФаксОрганизации" formatValue="Факс"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации" formatValue="ФактическийАдрес"/>
    <predefinedMaps configurationValue="Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации" formatValue="ЮридическийАдрес"/>
  </predefineds>
  <predefineds name="Перечисление_ЮридическоеФизическоеЛицо" configurationObjectName="Метаданные.Перечисления.ЮридическоеФизическоеЛицо" formatObject="ЮридическоеФизическоеЛицо" forSending="true" forReceiving="true">
    <configurationObject xsi:type="mdclass:Enum" href="bm://Демо_ЗУП_319/Enum.ЮридическоеФизическоеЛицо#/"/>
    <predefinedMaps configurationValue="Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо" formatValue="ФизическоеЛицо"/>
    <predefinedMaps configurationValue="Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо" formatValue="ЮридическоеЛицо"/>
  </predefineds>
  <predefineds name="ПолФизическогоЛица" configurationObjectName="Метаданные.Перечисления.ПолФизическогоЛица" formatObject="Пол" forSending="true" forReceiving="true">
    <configurationObject xsi:type="mdclass:Enum" href="bm://Демо_ЗУП_319/Enum.ПолФизическогоЛица#/"/>
    <predefinedMaps configurationValue="Перечисления.ПолФизическогоЛица.Женский" formatValue="Женский"/>
    <predefinedMaps configurationValue="Перечисления.ПолФизическогоЛица.Мужской" formatValue="Мужской"/>
  </predefineds>
  <algorithms name="ОтложеннаяОбработка_ДанныеДляРасчетаЗарплаты" exists="true" params="КомпонентыОбмена, Объект" body="&#x9;Если Не ЗначениеЗаполнено(Объект.ВидДокумента) Тогда&#xD;&#xA;&#x9;&#x9;Объект.ВидДокумента = ВидДокументаСдельныеРаботы(КомпонентыОбмена, Объект.Организация);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Расценки = Объект.ВыполненныеРаботы.Выгрузить();&#xD;&#xA;&#x9;Расценки.Свернуть(&quot;ВидРабот, Расценка&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;Расценки.ВидРабот,&#xD;&#xA;&#x9;|&#x9;Расценки.Расценка&#xD;&#xA;&#x9;|ПОМЕСТИТЬ РасценкиВДокументе&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;&amp;Расценки КАК Расценки&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;Расценки.Расценка > 0&#xD;&#xA;&#x9;|;&#xD;&#xA;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;&amp;Дата КАК Период,&#xD;&#xA;&#x9;|&#x9;РасценкиВДокументе.ВидРабот КАК ВидРабот,&#xD;&#xA;&#x9;|&#x9;РасценкиВДокументе.Расценка КАК Расценка&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;РасценкиВДокументе КАК РасценкиВДокументе&#xD;&#xA;&#x9;|&#x9;&#x9;ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников.СрезПоследних(&amp;Дата, ) КАК РасценкиРаботСотрудниковСрезПоследних&#xD;&#xA;&#x9;|&#x9;&#x9;ПО РасценкиРаботСотрудниковСрезПоследних.ВидРабот = РасценкиВДокументе.ВидРабот&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;РасценкиВДокументе.Расценка &lt;> ЕСТЬNULL(РасценкиРаботСотрудниковСрезПоследних.Расценка, 0)&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Расценки&quot;, Расценки);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Дата&quot;, НачалоДня(Объект.Дата));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;Пока Выборка.Следующий() Цикл&#xD;&#xA;&#x9;&#x9;НаборЗаписей = РегистрыСведений.РасценкиРаботСотрудников.СоздатьНаборЗаписей();&#xD;&#xA;&#x9;&#x9;НаборЗаписей.Отбор.ВидРабот.Установить(Выборка.ВидРабот);&#xD;&#xA;&#x9;&#x9;НаборЗаписей.Отбор.Период.Установить(Выборка.Период);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Запись = НаборЗаписей.Добавить();&#xD;&#xA;&#x9;&#x9;ЗаполнитьЗначенияСвойств(Запись, Выборка);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НаборЗаписей.Записать(Истина);&#xD;&#xA;&#x9;КонецЦикла;"/>
  <algorithms name="ОтложеннаяОбработка_Организации" exists="true" params="Объект" body="&#x9;Если ЗначениеЗаполнено(Объект.ГоловнаяОрганизация) Тогда&#xD;&#xA;&#x9;&#x9;Объект.ОбособленноеПодразделение = (Не Объект.ГоловнаяОрганизация = Объект.Ссылка);&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;Объект.ОбособленноеПодразделение = Ложь;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(Объект.ГоловнаяОрганизация)&#xD;&#xA;&#x9;&#x9;И Не Объект.ОбособленноеПодразделение Тогда&#xD;&#xA;&#x9;&#x9;Объект.ГоловнаяОрганизация = Объект.Ссылка;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(Объект.РайонныйКоэффициент) Тогда&#xD;&#xA;&#x9;&#x9;Объект.РайонныйКоэффициент = 1;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ОтложеннаяОбработка_СтруктураПредприятия"/>
  <algorithms name="ОтложеннаяОбработка_ФизЛица" exists="true" params="Объект, КомпонентыОбмена" body="&#x9;Если НЕ ЗначениеЗаполнено(Объект.ГруппаДоступа) Тогда&#xD;&#xA;&#x9;&#x9;Объект.ГруппаДоступа = ЭлементПоУмолчанию_ГруппаДоступаФизЛица(КомпонентыОбмена.ПараметрыКонвертации);&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ОтложеннаяОбработка_Валюты"/>
  <algorithms name="ОтложеннаяОбработка_ВидыРаботСотрудников"/>
  <algorithms name="ОтложеннаяОбработка_РегистрацииВНалоговомОргане" exists="true" params="Объект, КомпонентыОбмена" body="&#x9;Если Объект.ДополнительныеСвойства.Свойство(&quot;ЭтоОсновнаяРегистрация&quot;)&#xD;&#xA;&#x9;&#x9;И ОбщегоНазначения.СсылкаСуществует(Объект.Владелец)&#xD;&#xA;&#x9;&#x9;И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, &quot;РегистрацияВНалоговомОргане&quot;) = Объект.Ссылка Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ОрганизацияОбъект = Объект.Владелец.ПолучитьОбъект();&#xD;&#xA;&#x9;&#x9;ОрганизацияОбъект.РегистрацияВНалоговомОргане = Объект.Ссылка;&#xD;&#xA;&#x9;&#x9;ОрганизацияОбъект.Записать();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ВерсияФорматаЧислом" exists="true" methodType="Функция" params="СтрокаВерсии" body="&#x9;Если Не ЗначениеЗаполнено(СтрокаВерсии) Или СтрокаВерсии = &quot;1.0.beta&quot; Тогда&#xD;&#xA;&#x9;&#x9;Возврат 0;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВерсияФорматаЧислом = 0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;РазрядыВерсии = СтрРазделить(СтрокаВерсии, &quot;.&quot;);&#xD;&#xA;&#x9;Если РазрядыВерсии.Количество() &lt;> 2 Тогда&#xD;&#xA;&#x9;&#x9;ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(&quot;ru = 'Неправильный формат параметра СтрокаВерсии1: %1'&quot;), СтрокаВерсии);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;МножительРазряда = 10000;&#xD;&#xA;&#x9;Для ИндексРазрядаОбратный = 0 По 1 Цикл&#xD;&#xA;&#x9;&#x9;ВерсияФорматаЧислом = ВерсияФорматаЧислом + Число(РазрядыВерсии[ИндексРазрядаОбратный])*МножительРазряда;&#xD;&#xA;&#x9;&#x9;МножительРазряда = МножительРазряда / 100;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;Возврат ВерсияФорматаЧислом;"/>
  <algorithms name="ВидДокументаСдельныеРаботы" exists="true" methodType="Функция" params="КомпонентыОбмена, ОрганизацияСсылка" body="&#x9;Результат = Справочники.ВидыДокументовВводДанныхДляРасчетаЗарплаты.ПустаяСсылка();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;ВидыДокументовВводДанныхДляРасчетаЗарплаты.Ссылка КАК ВидДокумента,&#xD;&#xA;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;|&#x9;&#x9;КОГДА ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = &amp;Организация&#xD;&#xA;&#x9;|&#x9;&#x9;&#x9;ТОГДА 3&#xD;&#xA;&#x9;|&#x9;&#x9;ИНАЧЕ 2&#xD;&#xA;&#x9;|&#x9;КОНЕЦ КАК Приоритет&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ШаблоныВводаИсходныхДанных КАК Таблица_ШаблоныВводаИсходныхДанных&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыДокументовВводДанныхДляРасчетаЗарплаты КАК ВидыДокументовВводДанныхДляРасчетаЗарплаты&#xD;&#xA;&#x9;|&#x9;&#x9;ПО (Таблица_ШаблоныВводаИсходныхДанных.Шаблон = ВидыДокументовВводДанныхДляРасчетаЗарплаты.Ссылка)&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;Таблица_ШаблоныВводаИсходныхДанных.Ссылка = &amp;УзелОбмена&#xD;&#xA;&#x9;|&#x9;И (ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = &amp;Организация&#xD;&#xA;&#x9;|&#x9;&#x9;&#x9;ИЛИ ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|ОБЪЕДИНИТЬ ВСЕ&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;ВидыДокументовВводДанныхДляРасчетаЗарплаты.Ссылка,&#xD;&#xA;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;|&#x9;&#x9;КОГДА ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = &amp;Организация&#xD;&#xA;&#x9;|&#x9;&#x9;&#x9;ТОГДА 1&#xD;&#xA;&#x9;|&#x9;&#x9;ИНАЧЕ 0&#xD;&#xA;&#x9;|&#x9;КОНЕЦ&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Справочник.ВидыДокументовВводДанныхДляРасчетаЗарплаты КАК ВидыДокументовВводДанныхДляРасчетаЗарплаты&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ВидыДокументовВводДанныхДляРасчетаЗарплаты.ВидыРаботЗаполняютсяВДокументе&#xD;&#xA;&#x9;|&#x9;И НЕ ВидыДокументовВводДанныхДляРасчетаЗарплаты.ВыполненныеРаботыРаспределяютсяПоСотрудникам&#xD;&#xA;&#x9;|&#x9;И НЕ ВидыДокументовВводДанныхДляРасчетаЗарплаты.ВыполненныеРаботыВводятсяСводно&#xD;&#xA;&#x9;|&#x9;И НЕ ВидыДокументовВводДанныхДляРасчетаЗарплаты.ПометкаУдаления&#xD;&#xA;&#x9;|&#x9;И (ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = &amp;Организация&#xD;&#xA;&#x9;|&#x9;&#x9;&#x9;ИЛИ ВидыДокументовВводДанныхДляРасчетаЗарплаты.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))&#xD;&#xA;&#x9;|&#xD;&#xA;&#x9;|УПОРЯДОЧИТЬ ПО&#xD;&#xA;&#x9;|&#x9;Приоритет УБЫВ&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;УзелОбмена&quot;, КомпонентыОбмена.УзелКорреспондента);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Организация&quot;, ОрганизацияСсылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;Если Выборка.Следующий() Тогда&#xD;&#xA;&#x9;&#x9;Результат = Выборка.ВидДокумента;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Возврат Результат;"/>
  <algorithms name="ВыгрузитьДополнительныеРеквизитыИСведения" exists="true" params="КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, ЕстьДопРеквизиты = Ложь" body="&#x9;Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) &lt; ВерсияФорматаЧислом(&quot;1.0&quot;) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТаблицаДопРеквизитов = Новый ТаблицаЗначений;&#xD;&#xA;&#x9;ТаблицаДопРеквизитов.Колонки.Добавить(&quot;Свойство&quot;);&#xD;&#xA;&#x9;ТаблицаДопРеквизитов.Колонки.Добавить(&quot;ЗначениеСвойства&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ЕстьДопРеквизиты Тогда&#xD;&#xA;&#x9;&#x9;ВыгрузкаДопРеквизитовИзТаблицыЗначений(КомпонентыОбмена, ДанныеИБ.ДополнительныеРеквизиты, ТаблицаДопРеквизитов);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос;&#xD;&#xA;&#x9;Запрос.Текст = &quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;Свойство КАК Свойство,&#xD;&#xA;&#x9;|&#x9;Значение КАК Значение&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;РегистрСведений.ДополнительныеСведения&#xD;&#xA;&#x9;|ГДЕ Объект = &amp;Ссылка&quot;;&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;ДанныеИБДополнительныеРеквизиты = Запрос.Выполнить().Выгрузить();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВыгрузкаДопРеквизитовИзТаблицыЗначений(КомпонентыОбмена, ДанныеИБДополнительныеРеквизиты, ТаблицаДопРеквизитов);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ТаблицаДопРеквизитов.КОличество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;ДополнительныеРеквизиты&quot;, ТаблицаДопРеквизитов);&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ВыгрузитьПодробныеДанныеФИО" exists="true" params="КомпонентыОбмена, ДанныеИБ, ДанныеXDTO" body="&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.ДанныеФИО&quot;) Тогда&#xD;&#xA;&#x9;&#x9;// Выгрузка данных о ФИО.&#xD;&#xA;&#x9;&#x9;Запрос = Новый Запрос;&#xD;&#xA;&#x9;&#x9;Запрос.Текст = &quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;Период КАК НачалоПериода,&#xD;&#xA;&#x9;&#x9;|&#x9;Фамилия,&#xD;&#xA;&#x9;&#x9;|&#x9;Имя,&#xD;&#xA;&#x9;&#x9;|&#x9;Отчество&#xD;&#xA;&#x9;&#x9;|ИЗ РегистрСведений.ФИОФизическихЛиц&#xD;&#xA;&#x9;&#x9;|ГДЕ ФизическоеЛицо = &amp;ФизическоеЛицо&quot;;&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;ФизическоеЛицо&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#x9;РезультатЗапроса = Запрос.Выполнить();&#xD;&#xA;&#x9;&#x9;Если НЕ РезультатЗапроса.Пустой() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеXDTO.Вставить(&quot;ДанныеФИО&quot;, РезультатЗапроса.Выгрузить());&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ВыгрузкаДопРеквизитовИзТаблицыЗначений" exists="true" params="КомпонентыОбмена, ДанныеИБДополнительныеРеквизиты, ТаблицаДопРеквизитов" body="&#x9;Для Каждого СтрокаТЧ Из ДанныеИБДополнительныеРеквизиты Цикл&#xD;&#xA;&#x9;&#x9;Если Не ЗначениеЗаполнено(СтрокаТЧ.Свойство)&#xD;&#xA;&#x9;&#x9;&#x9;Или Не ЗначениеЗаполнено(СтрокаТЧ.Значение) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТипЗначенияСвойства = ТипЗнч(СтрокаТЧ.Значение);&#xD;&#xA;&#x9;&#x9;ЗначениеСвойства = Неопределено;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ЗначениеСвойства = ЗначениеВИнструкциюПКО(КомпонентыОбмена, СтрокаТЧ.Значение);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЗначениеСвойства = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НовСтрока = ТаблицаДопРеквизитов.Добавить();&#xD;&#xA;&#x9;&#x9;НовСтрока.Свойство&#x9;&#x9;&#x9;= СтрокаТЧ.Свойство;&#xD;&#xA;&#x9;&#x9;НовСтрока.ЗначениеСвойства&#x9;= ЗначениеСвойства;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЦикла;"/>
  <algorithms name="ДобавитьИдентификаторПеречисленияПоСсылке" exists="true" params="ТаблицаДанные, ИмяКолонки" body="&#x9;ТаблицаДанные.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов(&quot;Строка&quot;));&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Для Каждого СтрокаДанные Из ТаблицаДанные Цикл&#xD;&#xA;&#x9;&#x9;// Для перечислений XMLСтрока возвращает идентификатор значения, как он задан в конфигураторе.&#xD;&#xA;&#x9;&#x9;СтрокаДанные[ИмяКолонки] = XMLСтрока(СтрокаДанные[ИмяКолонки + &quot;Ссылка&quot;]);&#xD;&#xA;&#x9;КонецЦикла;"/>
  <algorithms name="ЗагрузитьДополнительныеРеквизиты" exists="true" params="ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена, ЕстьТЧДопРеквизиты = Ложь" body="&#x9;Если Не (ДанныеXDTO.Свойство(&quot;ДополнительныеРеквизиты&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеXDTO.ДополнительныеРеквизиты)) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() &#xD;&#xA;&#x9;&#x9;Или Не ПолучитьФункциональнуюОпцию(&quot;ИспользоватьДополнительныеРеквизитыИСведения&quot;) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТипДанныхСтрокой = ПолученныеДанные.Метаданные().ПолноеИмя();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;МассивСтрокДопРеквизиты = Новый Массив;&#xD;&#xA;&#x9;МассивСтрокДопСведения = Новый Массив;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Для Каждого СтрокаТЧ Из ДанныеXDTO.ДополнительныеРеквизиты Цикл&#xD;&#xA;&#x9;&#x9;ЭтоДопСведение = СтрокаТЧ.Свойство.Свойство(&quot;ЭтоДополнительноеСведение&quot;) И СтрокаТЧ.Свойство.ЭтоДополнительноеСведение;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ДопРеквизитыСтрока = КомпонентыОбмена.ПараметрыКонвертации.ЗагруженныеДопРеквизитыИСведения.Добавить();&#xD;&#xA;&#x9;&#x9;ДопРеквизитыСтрока.Свойство = СтрокаТЧ.Свойство;&#xD;&#xA;&#x9;&#x9;ДопРеквизитыСтрока.ЭтоДопСведение = ЭтоДопСведение;&#xD;&#xA;&#x9;&#x9;ДопРеквизитыСтрока.ТипОбъекта = ТипДанныхСтрокой;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ЭтоПростойТип = Ложь;&#xD;&#xA;&#x9;&#x9;Результат = ЗначениеВИнструкциюПКО(КомпонентыОбмена, СтрокаТЧ.ЗначениеСвойства, ЭтоПростойТип);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Результат = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЭтоПростойТип Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ДопРеквизитыСтрока.ТипЗначения = ТипЗнч(СтрокаТЧ.ЗначениеСвойства);&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;ЗначениеСвойства = Результат.Значение;&#xD;&#xA;&#x9;&#x9;&#x9;Если Результат.ИмяПКО = &quot;Справочник_ЗначенияДополнительныхРеквизитов&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если Не (Результат.Значение.Свойство(&quot;Владелец&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;И ЗначениеЗаполнено(Результат.Значение.Владелец)) Тогда&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Результат.Значение.Вставить(&quot;Владелец&quot;, СтрокаТЧ.Свойство);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СтруктураДанныхСтроки = Новый Структура(&quot;Свойство, Значение&quot;, СтрокаТЧ.Свойство, Результат);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЭтоДопСведение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;МассивСтрокДопСведения.Добавить(СтруктураДанныхСтроки);&#xD;&#xA;&#x9;&#x9;ИначеЕсли ЕстьТЧДопРеквизиты Тогда&#xD;&#xA;&#x9;&#x9;&#x9;МассивСтрокДопРеквизиты.Добавить(СтруктураДанныхСтроки);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если МассивСтрокДопРеквизиты.Количество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ДополнительныеРеквизиты&quot;, МассивСтрокДопРеквизиты);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если МассивСтрокДопСведения.Количество() > 0 Тогда&#xD;&#xA;&#x9;&#x9;ПолученныеДанные.ДополнительныеСвойства.Вставить(&quot;ДополнительныеСведения&quot;, МассивСтрокДопСведения);&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ЗагрузитьДополнительныеСведения" exists="true" params="ОбъектСсылка, СтруктураДопСвойства, КомпонентыОбмена" body="&#x9;Если Не СтруктураДопСвойства.Свойство(&quot;ДополнительныеСведения&quot;)&#xD;&#xA;&#x9;&#x9;Или СтруктураДопСвойства.ДополнительныеСведения.Количество() = 0 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации()&#xD;&#xA;&#x9;&#x9;Или Не ПолучитьФункциональнуюОпцию(&quot;ИспользоватьДополнительныеРеквизитыИСведения&quot;) Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДопСведенияНаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();&#xD;&#xA;&#x9;ДопСведенияНаборЗаписей.Отбор.Объект.Установить(ОбъектСсылка);&#xD;&#xA;&#x9;ДопСведенияНаборЗаписей.ОбменДанными.Загрузка = Истина;&#xD;&#xA;&#x9;ПКО_ДопРеквизиты = ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена,&quot;Справочник_ДополнительныеРеквизиты&quot;);&#xD;&#xA;&#x9;Для Каждого СтрокаДопСведения Из СтруктураДопСвойства.ДополнительныеСведения Цикл&#xD;&#xA;&#x9;&#x9;СвойствоСсылка = ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена, &#xD;&#xA;&#x9;&#x9;&#x9;СтрокаДопСведения.Свойство, &#xD;&#xA;&#x9;&#x9;&#x9;ПКО_ДопРеквизиты, &#xD;&#xA;&#x9;&#x9;&#x9;&quot;ПолучитьСсылку&quot;).Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ТипЗнч(СтрокаДопСведения.Значение) = Тип(&quot;Структура&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ПКО_ЗначениеСвойства = ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена,СтрокаДопСведения.Значение.ИмяПКО);&#xD;&#xA;&#x9;&#x9;&#x9;ЗначениеСвойства = ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;СтрокаДопСведения.Значение.Значение, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ПКО_ЗначениеСвойства, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;ПолучитьСсылку&quot;).Ссылка;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;ЗначениеСвойства = СтрокаДопСведения.Значение;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;НовЗапись = ДопСведенияНаборЗаписей.Добавить();&#xD;&#xA;&#x9;&#x9;НовЗапись.Объект = ОбъектСсылка;&#xD;&#xA;&#x9;&#x9;НовЗапись.Свойство = СвойствоСсылка;&#xD;&#xA;&#x9;&#x9;НовЗапись.Значение = ЗначениеСвойства;&#xD;&#xA;&#x9;КонецЦикла;&#x9;&#xD;&#xA;&#x9;ДопСведенияНаборЗаписей.Записать();"/>
  <algorithms name="ЗагрузитьПодробныеДанныеФИО" exists="true" params="КомпонентыОбмена, ПолученныеДанные, ФизЛицоСсылка" body="&#x9;Если СвойствоФорматаОбмена(КомпонентыОбмена, &quot;Справочник.ФизическиеЛица.ДанныеФИО&quot;)&#xD;&#xA;&#x9;&#x9;И ПолученныеДанные.ДополнительныеСвойства.Свойство(&quot;ПодробныеДанныеФИО&quot;) Тогда&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.Отбор.ФизическоеЛицо.Установить(ФизЛицоСсылка);&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаФИО Из ПолученныеДанные.ДополнительныеСвойства.ПодробныеДанныеФИО Цикл&#xD;&#xA;&#x9;&#x9;&#x9;НовЗапись = НаборЗаписейФИО.Добавить();&#xD;&#xA;&#x9;&#x9;&#x9;ЗаполнитьЗначенияСвойств(НовЗапись, СтрокаФИО);&#xD;&#xA;&#x9;&#x9;&#x9;НовЗапись.ФизическоеЛицо = ФизЛицоСсылка;&#xD;&#xA;&#x9;&#x9;&#x9;НовЗапись.Период = СтрокаФИО.НачалоПериода;&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.ОбменДанными.Загрузка = Истина;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.Записать();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;Иначе &#xD;&#xA;&#x9;&#x9;// Запись ФИО по наименованию физ.лица.&#xD;&#xA;&#x9;&#x9;ФИОСтрокой = ПолученныеДанные.Наименование;&#xD;&#xA;&#x9;&#x9;//++ НЕ УТ&#xD;&#xA;&#x9;&#x9;ФИОСтрокой = ПолученныеДанные.ФИО;&#xD;&#xA;&#x9;&#x9;//-- НЕ УТ&#xD;&#xA;&#x9;&#x9;СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФИОСтрокой);&#xD;&#xA;&#x9;&#x9;ДанныеФИО = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(,Новый Структура(&quot;ФизическоеЛицо&quot;, ФизЛицоСсылка));&#xD;&#xA;&#x9;&#x9;Если ДанныеФИО.Количество() > 0 &#xD;&#xA;&#x9;&#x9;&#x9;И ДанныеФИО[0].Фамилия = СтруктураФИО.Фамилия&#xD;&#xA;&#x9;&#x9;&#x9;И ДанныеФИО[0].Имя = СтруктураФИО.Имя&#xD;&#xA;&#x9;&#x9;&#x9;И ДанныеФИО[0].Отчество = СтруктураФИО.Отчество Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.Отбор.ФизическоеЛицо.Установить(ФизЛицоСсылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если СтруктураФИО.Фамилия = Неопределено &#xD;&#xA;&#x9;&#x9;&#x9;И СтруктураФИО.Имя = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И СтруктураФИО.Отчество = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;НаборЗаписейФИО.Записать();&#xD;&#xA;&#x9;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;НовЗапись = НаборЗаписейФИО.Добавить();&#xD;&#xA;&#x9;&#x9;ЗаполнитьЗначенияСвойств(НовЗапись, СтруктураФИО, &quot;Фамилия, Имя, Отчество&quot;);&#xD;&#xA;&#x9;&#x9;НовЗапись.ФизическоеЛицо = ФизЛицоСсылка;&#xD;&#xA;&#x9;&#x9;НовЗапись.Период = ТекущаяДатаСеанса();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.ОбменДанными.Загрузка = Истина;&#xD;&#xA;&#x9;&#x9;НаборЗаписейФИО.Записать();&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ЗаполнитьОбщиеДанныеЗаявкиНаРасходДС" exists="true" params="КомпонентыОбмена, ДанныеXDTO" body="&#x9;ДанныеXDTO.Вставить(&quot;Валюта&quot;, ЗначениеВИнструкциюПКО(КомпонентыОбмена, ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты()));&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;Статус&quot;, &quot;НеСогласована&quot;);"/>
  <algorithms name="ЗаполнитьПодразделениеПоУмолчанию" exists="true" params="ТаблицаДанные" body="&#x9;Для Каждого СтрокаДанные Из ТаблицаДанные Цикл&#xD;&#xA;&#x9;&#x9;Если ЗначениеЗаполнено(СтрокаДанные[&quot;ПодразделениеПредприятия&quot;]) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаДанные[&quot;Подразделение&quot;] = СтрокаДанные[&quot;ПодразделениеПредприятия&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ПодразделениеПоУмолчанию = Новый Структура;&#xD;&#xA;&#x9;&#x9;ПодразделениеПоУмолчанию.Вставить(&quot;Наименование&quot;, &quot;Подразделение по умолчанию&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаДанные[&quot;Подразделение&quot;] = Новый Структура(&quot;Значение, ИмяПКО&quot;,&#xD;&#xA;&#x9;&#x9;&#x9;ПодразделениеПоУмолчанию, &quot;Справочник_Подразделения_ИзСтруктуры&quot;);&#xD;&#xA;&#x9;КонецЦикла;"/>
  <algorithms name="ЗаполнитьРасшифровкуПлатежаПоВедомости" exists="true" params="ДанныеИБ, ДанныеXDTO" body="&#x9;ВидВедомости = ДанныеИБ.Метаданные().ПолноеИмя();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ВидВедомости = &quot;Документ.ВедомостьНаВыплатуЗарплатыПеречислением&quot; Тогда&#xD;&#xA;&#x9;&#x9;ТекстЗапроса = &#xD;&#xA;&#x9;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;ВедомостьЗарплата.ФизическоеЛицо КАК Сотрудник,&#xD;&#xA;&#x9;&#x9;|&#x9;ВедомостьЗарплата.БанковскийСчет КАК БанковскийСчет,&#x9;&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Номер КАК НомерВедомостиНаВыплатуЗарплаты,&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Дата КАК ДатаВедомостиНаВыплатуЗарплаты,&#xD;&#xA;&#x9;&#x9;|&#x9;СУММА(ВедомостьЗарплата.КВыплате + ВедомостьЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК Сумма&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;Документ.ВедомостьНаВыплатуЗарплатыПеречислением КАК Ведомость&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК ВедомостьЗарплата&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ПО ВедомостьЗарплата.Ссылка = Ведомость.Ссылка&#xD;&#xA;&#x9;&#x9;|ГДЕ&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;&#x9;|&#x9;ВедомостьЗарплата.ФизическоеЛицо,&#xD;&#xA;&#x9;&#x9;|&#x9;ВедомостьЗарплата.БанковскийСчет,&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Номер,&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Дата&quot;;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;ТекстЗапроса = &#xD;&#xA;&#x9;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.СуммаПоДокументу КАК Сумма,&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Номер КАК НомерВедомостиНаВыплатуЗарплаты,&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Дата КАК ДатаВедомостиНаВыплатуЗарплаты&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;&amp;ДокументВедомостьНаВыплатуЗарплаты КАК Ведомость&#xD;&#xA;&#x9;&#x9;|ГДЕ&#xD;&#xA;&#x9;&#x9;|&#x9;Ведомость.Ссылка = &amp;Ссылка&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстЗапроса = СтрЗаменить(ТекстЗапроса, &quot;&amp;ДокументВедомостьНаВыплатуЗарплаты&quot;, ВидВедомости);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(ТекстЗапроса);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;РасшифровкаПлатежа&quot;, Запрос.Выполнить().Выгрузить());"/>
  <algorithms name="ЗаполнитьРасшифровкуПлатежаПоВедомости_НДФЛ" exists="true" params="ДанныеИБ, ДанныеXDTO" body="&#x9;ВидВедомости = ДанныеИБ.Метаданные().ПолноеИмя();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТекстЗапроса = &#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;СУММА(Ведомость_НДФЛ.Сумма) КАК Сумма&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;&amp;ДокументВедомостьНаВыплатуЗарплаты_НДФЛ КАК Ведомость_НДФЛ&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;Ведомость_НДФЛ.Ссылка = &amp;Ссылка&quot;;&#xD;&#xA;&#x9;ТекстЗапроса = СтрЗаменить(ТекстЗапроса, &quot;&amp;ДокументВедомостьНаВыплатуЗарплаты_НДФЛ&quot;, ВидВедомости + &quot;.НДФЛ&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Запрос = Новый Запрос(ТекстЗапроса);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;РасшифровкаПлатежа&quot;, Запрос.Выполнить().Выгрузить());"/>
  <algorithms name="ЗаполнитьРасшифровкуПлатежаПоПлатежноеПоручение_НД" exists="true" params="ДанныеИБ, ДанныеXDTO" body="&#x9;// РасшифровкаПлатежа: Сумма&#xD;&#xA;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;|&#x9;СУММА(ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Сумма) КАК Сумма&#xD;&#xA;&#x9;|ИЗ&#xD;&#xA;&#x9;|&#x9;Документ.ПлатежноеПоручение КАК ПлатежноеПоручение&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение.Ведомости КАК ПлатежноеПоручениеВедомости&#xD;&#xA;&#x9;|&#x9;&#x9;ПО ПлатежноеПоручениеВедомости.Ссылка = ПлатежноеПоручение.Ссылка&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк&#xD;&#xA;&#x9;|&#x9;&#x9;ПО ВедомостьНаВыплатуЗарплатыВБанк.Ссылка = ПлатежноеПоручениеВедомости.Ведомость&#xD;&#xA;&#x9;|&#x9;&#x9;ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ&#xD;&#xA;&#x9;|&#x9;&#x9;ПО ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка&#xD;&#xA;&#x9;|ГДЕ&#xD;&#xA;&#x9;|&#x9;ПлатежноеПоручениеВедомости.Ссылка = &amp;Ссылка&quot;);&#xD;&#xA;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;РасшифровкаПлатежа =Запрос.Выполнить().Выгрузить();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;РасшифровкаПлатежа&quot;, РасшифровкаПлатежа);"/>
  <algorithms name="ЗаполнитьРеквизиты" exists="true" params="ДанныеПриемник, ДанныеИсточник, СтрокаРеквизиты, Перезаполнять = Ложь" body="&#x9;Реквизиты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРеквизиты, &quot;,&quot;, Истина, Истина);&#xD;&#xA;&#x9;Для Каждого Реквизит Из Реквизиты Цикл&#xD;&#xA;&#x9;&#x9;ЗначенияПриемник = Новый Структура(Реквизит);&#xD;&#xA;&#x9;&#x9;ЗаполнитьЗначенияСвойств(ЗначенияПриемник, ДанныеПриемник);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ЗначенияИсточник = Новый Структура(Реквизит);&#xD;&#xA;&#x9;&#x9;ЗаполнитьЗначенияСвойств(ЗначенияИсточник, ДанныеИсточник);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЗначениеЗаполнено(ЗначенияИсточник[Реквизит])&#xD;&#xA;&#x9;&#x9;&#x9;И (Не ЗначениеЗаполнено(ЗначенияПриемник[Реквизит]) или Перезаполнять)  Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ЗаполнитьЗначенияСвойств(ДанныеПриемник, ЗначенияИсточник);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЦикла;"/>
  <algorithms name="ЗаполнитьСтрокуКонтактнойИнформацией" exists="true" params="СтрокаКИ" body="&#x9;XDTOКонтактная = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияИзXML(СтрокаКИ.ЗначенияПолей, СтрокаКИ.Тип, );&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ИЛИ СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.НомерТелефона = XDTOКонтактная.Представление;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.НомерТелефонаБезКодов = XDTOКонтактная.Состав.Номер;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ИначеЕсли СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.Страна = XDTOКонтактная.Состав.Страна;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если XDTOКонтактная.Состав.Состав &lt;> Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;И ТипЗнч(XDTOКонтактная.Состав.Состав) &lt;> Тип(&quot;Строка&quot;) Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.Регион = XDTOКонтактная.Состав.Состав.СубъектРФ;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.Город = XDTOКонтактная.Состав.Состав.Город;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ИначеЕсли СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.АдресЭП = XDTOКонтактная.Состав.Значение;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ПозицияСобаки = Найти(XDTOКонтактная.Состав.Значение, &quot;@&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если ПозицияСобаки &lt;> 0 Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.ДоменноеИмяСервера = Сред(XDTOКонтактная.Состав.Значение, ПозицияСобаки + 1);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Заполнение представления&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Найти(XDTOКонтактная.Представление, Символы.ПС) = 0 Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.Представление = XDTOКонтактная.Представление;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаПредставление = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если СтрокаКИ.Тип = ПредопределенноеЗначение(&quot;Перечисление.ТипыКонтактнойИнформации.Адрес&quot;) Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтруктураПолейКИ = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураЗначенийПолей(XDTOКонтактная.Представление, СтрокаКИ.Вид);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураПолейКИ, СтрокаПредставление);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ИначеЕсли СтрокаКИ.Тип = ПредопределенноеЗначение(&quot;Перечисление.ТипыКонтактнойИнформации.Телефон&quot;)&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ИЛИ СтрокаКИ.Тип = ПредопределенноеЗначение(&quot;Перечисление.ТипыКонтактнойИнформации.Факс&quot;) Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтруктураПолейКИ = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураЗначенийПолей(XDTOКонтактная.Представление, СтрокаКИ.Вид);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтруктураПолейКИПолная = Новый Структура(&quot;КодСтраны,КодГорода,НомерТелефона,Добавочный,Комментарий&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;ЗаполнитьЗначенияСвойств(СтруктураПолейКИПолная, СтруктураПолейКИ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаПредставление = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;СтруктураПолейКИПолная.КодСтраны, СтруктураПолейКИПолная.КодГорода,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;СтруктураПолейКИПолная.НомерТелефона, СтруктураПолейКИПолная.Добавочный, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;СтруктураПолейКИПолная.Комментарий);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаПредставление = СтрЗаменить(XDTOКонтактная.Представление, Символы.ПС, &quot;,&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СтрокаКИ.Представление = СтрокаПредставление;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ЗначениеВИнструкциюПКО" exists="true" methodType="Функция" params="КомпонентыОбмена, Значение, ЭтоПростойТип = Ложь, ПравилоНайдено = Ложь" body="&#x9;// Параметры:&#xD;&#xA;&#x9;// КомпонентыОбмена - структура компонентов обмена в рамках текущего сеанса;&#xD;&#xA;&#x9;// Значение - значение, которое необходимо поместить в свойство объекта XDTO;&#xD;&#xA;&#x9;// ЭтоПростойТип - исходящий параметр. Указывает, является ли тип переданного значения примитивным (Число, Строка,&#xD;&#xA;&#x9;//                 Булево, Дата);&#xD;&#xA;&#x9;// ПравилоНайдено - определяет, было ли найдено правило конвертации. Если правило найдено, но Результат = Неопределено,&#xD;&#xA;&#x9;//                  значит, было найдено более одного ПКО для значения.&#xD;&#xA;&#x9;Результат = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Не ЗначениеЗаполнено(Значение) Тогда&#xD;&#xA;&#x9;&#x9;Возврат Результат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ЭтоОтправка&#x9;&#x9;= (КомпонентыОбмена.НаправлениеОбмена = &quot;Отправка&quot;);&#xD;&#xA;&#x9;ЭтоПолучение&#x9;= (КомпонентыОбмена.НаправлениеОбмена = &quot;Получение&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТипЗначенияСвойства = ТипЗнч(Значение);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ЭтоПолучение&#xD;&#xA;&#x9;&#x9;И ТипЗнч(Значение) = Тип(&quot;Структура&quot;)&#xD;&#xA;&#x9;&#x9;И Значение.Свойство(&quot;Ссылка&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТипЗначенияСвойства = Значение.Ссылка.ТипЗначенияXDTO;&#xD;&#xA;&#x9;ИначеЕсли ТипЗнч(Значение) = Тип(&quot;Структура&quot;)&#xD;&#xA;&#x9;&#x9;И Значение.Свойство(&quot;ИмяПКО&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Возврат Новый Структура(&quot;Значение, ИмяПКО&quot;, Значение, Значение.ИмяПКО);&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ТипЗначенияСвойства = Тип(&quot;Число&quot;) &#xD;&#xA;&#x9;&#x9;Или ТипЗначенияСвойства = Тип(&quot;Строка&quot;)&#xD;&#xA;&#x9;&#x9;Или ТипЗначенияСвойства = Тип(&quot;Булево&quot;)&#xD;&#xA;&#x9;&#x9;Или ТипЗначенияСвойства = Тип(&quot;Дата&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Результат = Значение;&#xD;&#xA;&#x9;&#x9;ЭтоПростойТип = Истина;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;СтрокиПКО = Новый Массив;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЭтоОтправка Тогда&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокиПКО = КомпонентыОбмена.ПравилаКонвертацииОбъектов.НайтиСтроки(Новый Структура(&quot;ТипДанных&quot;, ТипЗначенияСвойства));&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если ЭтоПолучение Тогда&#xD;&#xA;&#x9;&#x9;&#x9;СтрокиПКО = КомпонентыОбмена.ПравилаКонвертацииОбъектов.НайтиСтроки(Новый Структура(&quot;ТипСсылкиXDTO&quot;, ТипЗначенияСвойства));&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;// Ищем только однозначное соответствие.&#xD;&#xA;&#x9;&#x9;// Если правил будет найдено больше одного, считаем, что конвертация не выполнена.&#xD;&#xA;&#x9;&#x9;ЭтоГруппа = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаПКО Из СтрокиПКО Цикл&#xD;&#xA;&#x9;&#x9;&#x9;Если ЭтоОтправка Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если СтрокаПКО.ЭтоСправочник Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Если ЭтоГруппа = Неопределено&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;И СтрокаПКО.ОбъектДанных.Иерархический&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;И СтрокаПКО.ОбъектДанных.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ЭтоГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, &quot;ЭтоГруппа&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ЭтоГруппа = Ложь;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Если ЭтоГруппа&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;И Не СтрокаПКО.ПравилоДляГруппыСправочника&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Или Не ЭтоГруппа&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;И СтрокаПКО.ПравилоДляГруппыСправочника Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Продолжить;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Прочие варианты проверок&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Если ПравилоНайдено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Результат = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Прервать;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Результат = Новый Структура(&quot;Значение, ИмяПКО&quot;, Значение, СтрокаПКО.ИмяПКО);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ПравилоНайдено = Истина;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Возврат Результат;"/>
  <algorithms name="ПередКонвертациейЗУП30" exists="true" params="КомпонентыОбмена" body="&#x9;ПараметрыКонвертации = КомпонентыОбмена.ПараметрыКонвертации;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если КомпонентыОбмена.НаправлениеОбмена = &quot;Получение&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПараметрыКонвертации.Вставить(&quot;ГруппаДоступаФизЛицПоУмолчанию&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// ЗагруженныеДопРеквизитыИСведения&#xD;&#xA;&#x9;&#x9;// Инициализация таблицы для заполнения наборов дополнительных реквизитов и сведений.&#xD;&#xA;&#x9;&#x9;ДопРеквизитыИСведения = Новый ТаблицаЗначений;&#xD;&#xA;&#x9;&#x9;ДопРеквизитыИСведения.Колонки.Добавить(&quot;Свойство&quot;);&#xD;&#xA;&#x9;&#x9;ДопРеквизитыИСведения.Колонки.Добавить(&quot;ЭтоДопСведение&quot;);&#xD;&#xA;&#x9;&#x9;ДопРеквизитыИСведения.Колонки.Добавить(&quot;ТипОбъекта&quot;);&#xD;&#xA;&#x9;&#x9;ДопРеквизитыИСведения.Колонки.Добавить(&quot;ТипЗначения&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ПараметрыКонвертации.ЗагруженныеДопРеквизитыИСведения = ДопРеквизитыИСведения;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="ПодготовитьДанныеКонтактнаяИнформация" exists="true" params="ДанныеИБ, ДанныеXDTO" body="&#x9;Если ДанныеИБ.КонтактнаяИнформация.Количество() = 0 Тогда&#xD;&#xA;&#x9;&#x9;Возврат;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ТабКонтактнаяИнформация = Новый ТаблицаЗначений;&#xD;&#xA;&#x9;ТабКонтактнаяИнформация.Колонки.Добавить(&quot;ЗначенияПолей&quot;);&#xD;&#xA;&#x9;ТабКонтактнаяИнформация.Колонки.Добавить(&quot;ВидКонтактнойИнформации&quot;);&#xD;&#xA;&#x9;ТабКонтактнаяИнформация.Колонки.Добавить(&quot;НаименованиеКонтактнойИнформации&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Для Каждого СтрокаКИ Из ДанныеИБ.КонтактнаяИнформация Цикл&#xD;&#xA;&#x9;&#x9;Если НЕ ЗначениеЗаполнено(СтрокаКИ.Вид)&#xD;&#xA;&#x9;&#x9;&#x9;ИЛИ (НЕ ЗначениеЗаполнено(СтрокаКИ.ЗначенияПолей) И НЕ ЗначениеЗаполнено(СтрокаКИ.Представление)) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;СвойстваВидаКИ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаКИ.Вид, &quot;Наименование,Предопределенный&quot;);&#xD;&#xA;&#x9;&#x9;СтрокаТЗКИ = ТабКонтактнаяИнформация.Добавить();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если Лев(СокрЛ(СтрокаКИ.ЗначенияПолей),1) = &quot;&lt;&quot; Тогда&#xD;&#xA;&#x9;&#x9;    // КИ в правильном формате.&#xD;&#xA;&#x9;&#x9;    СтрокаТЗКИ.ЗначенияПолей = СокрЛП(СтрокаКИ.ЗначенияПолей);&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;    ЗначенияПолей = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;    // Попытка №1.&#xD;&#xA;&#x9;&#x9;    Если ЗначениеЗаполнено(СокрЛП(СтрокаКИ.ЗначенияПолей)) Тогда &#xD;&#xA;&#x9;&#x9;    &#x9;ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СокрЛП(СтрокаКИ.ЗначенияПолей), СокрЛП(СтрокаКИ.Представление), СтрокаКИ.Вид);&#xD;&#xA;&#x9;&#x9;    КонецЕсли;&#xD;&#xA;&#x9;&#x9;    Если Лев(СокрЛ(ЗначенияПолей),1) &lt;> &quot;&lt;&quot; Тогда&#xD;&#xA;&#x9;&#x9;    &#x9;// Попытка №2.&#xD;&#xA;&#x9;&#x9;        ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияXMLПоПредставлению(СокрЛП(СтрокаКИ.Представление), СтрокаКИ.Вид);&#xD;&#xA;&#x9;&#x9;    КонецЕсли;&#xD;&#xA;&#x9;&#x9;    СтрокаТЗКИ.ЗначенияПолей = ЗначенияПолей;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Если СвойстваВидаКИ.Предопределенный&#xD;&#xA;&#x9;&#x9;&#x9;И Не СтрокаКИ.Вид = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(&quot;Справочник.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;И Не СтрокаКИ.Вид = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(&quot;Справочник.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица&quot;) Тогда&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаТЗКИ.ВидКонтактнойИнформации = СтрокаКИ.Вид;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Получение наименования значения перечисления.&#xD;&#xA;&#x9;&#x9;&#x9;ИндексТипаКИ = Перечисления.ТипыКонтактнойИнформации.Индекс(СтрокаКИ.Тип);&#xD;&#xA;&#x9;&#x9;&#x9;ИмяТипаКИ = Метаданные.Перечисления.ТипыКонтактнойИнформации.ЗначенияПеречисления[ИндексТипаКИ].Имя;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаТЗКИ.ВидКонтактнойИнформации = &quot;ПользовательскаяКИ&quot;+ИмяТипаКИ;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаТЗКИ.НаименованиеКонтактнойИнформации = СвойстваВидаКИ.Наименование;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ДанныеXDTO.Вставить(&quot;КонтактнаяИнформация&quot;, ТабКонтактнаяИнформация);"/>
  <algorithms name="ПолучитьКонтактнуюИнформациюФизическогоЛица" exists="true" params="ДанныеXDTO, ПолученныеДанные" body="&#x9;Если ДанныеXDTO.Свойство(&quot;КонтактнаяИнформация&quot;)&#xD;&#xA;&#x9;&#x9;И ЗначениеЗаполнено(ДанныеXDTO.КонтактнаяИнформация) Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Для Каждого СтрокаXDTO Из ДанныеXDTO.КонтактнаяИнформация Цикл&#xD;&#xA;&#x9;&#x9;&#x9;ВидКИСтрокой = СтрокаXDTO.ВидКонтактнойИнформации.Значение;&#xD;&#xA;&#x9;&#x9;&#x9;ТекВидКИ = Неопределено;&#xD;&#xA;&#x9;&#x9;&#x9;Если Лев(СокрЛП(ВидКИСтрокой),18) = &quot;ПользовательскаяКИ&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию(СтрокаXDTO.НаименованиеКонтактнойИнформации,,Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если НЕ ЗначениеЗаполнено(ТекВидКИ) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект = Справочники.ВидыКонтактнойИнформации.СоздатьЭлемент();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Наименование = СтрокаXDTO.НаименованиеКонтактнойИнформации;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ИмяТипаКИ = СтрЗаменить(СокрЛП(ВидКИСтрокой),&quot;ПользовательскаяКИ&quot;,&quot;&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Тип = Перечисления.ТипыКонтактнойИнформации[ИмяТипаКИ];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Используется = Истина;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ВидКИОбъект.Записать();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = ВидКИОбъект.Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;АдресЭлектроннойПочты&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;Телефон&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ПочтовыйАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ФактическийАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ЮридическийАдрес&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ТелефонДомашний&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ИначеЕсли ВидКИСтрокой = &quot;ТелефонРабочий&quot; Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;Если НЕ ЗначениеЗаполнено(ТекВидКИ) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Продолжить;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ТекТипКИ = ТекВидКИ.Тип;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ = ПолученныеДанные.КонтактнаяИнформация.Добавить();&#xD;&#xA;&#x9;&#x9;&#x9;ЗначенияПолейСтрокой = СокрЛП(СтрокаXDTO.ЗначенияПолей);&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.ЗначенияПолей = ЗначенияПолейСтрокой;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.Вид = ТекВидКИ;&#xD;&#xA;&#x9;&#x9;&#x9;СтрокаКИ.Тип = ТекТипКИ;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ЗаполнитьСтрокуКонтактнойИнформацией(СтрокаКИ);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;КонецЕсли;"/>
  <algorithms name="СвойствоФорматаОбмена" exists="true" methodType="Функция" params="КомпонентыОбмена, ИмяСвойства" body="&#x9;Результат = Ложь;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если КомпонентыОбмена.ВерсияФорматаОбмена = &quot;1.3&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПространствоИмен = &quot;http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.3&quot;;&#xD;&#xA;&#x9;ИначеЕсли КомпонентыОбмена.ВерсияФорматаОбмена = &quot;1.2&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПространствоИмен = &quot;http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.2&quot;;&#xD;&#xA;&#x9;ИначеЕсли КомпонентыОбмена.ВерсияФорматаОбмена = &quot;1.1&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПространствоИмен = &quot;http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.1&quot;;&#xD;&#xA;&#x9;ИначеЕсли КомпонентыОбмена.ВерсияФорматаОбмена = &quot;1.0&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПространствоИмен = &quot;http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.0&quot;;&#xD;&#xA;&#x9;ИначеЕсли КомпонентыОбмена.ВерсияФорматаОбмена = &quot;1.0.beta&quot; Тогда&#xD;&#xA;&#x9;&#x9;ПространствоИмен = &quot;http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.0.beta&quot;;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;Возврат Ложь;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;МассивСтрок = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуПоТочкамИСлэшам(ИмяСвойства);&#xD;&#xA;&#x9;Если ФабрикаXDTO.Тип(Новый ТипДанныхXML(ИмяСвойства, ПространствоИмен)) &lt;> Неопределено Тогда&#xD;&#xA;&#x9;&#x9;Результат = Истина;&#xD;&#xA;&#x9;ИначеЕсли МассивСтрок.Количество() > 1 Тогда&#xD;&#xA;&#x9;&#x9;ИмяОбъекта = МассивСтрок[0] + &quot;.&quot; + МассивСтрок[1];&#xD;&#xA;&#x9;&#x9;ТипФабрики = ФабрикаXDTO.Тип(Новый ТипДанныхXML(ИмяОбъекта, ПространствоИмен));&#xD;&#xA;&#x9;&#x9;Если ТипФабрики &lt;> Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Для Сч = 2 По МассивСтрок.Количество() - 1 Цикл&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ИмяТекОбъекта = МассивСтрок[Сч];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если ТипЗнч(ТипФабрики) = Тип(&quot;СвойствоXDTO&quot;) Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ТипФабрики = ТипФабрики.Тип.Свойства.Получить(ИмяТекОбъекта);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ТипФабрики = ТипФабрики.Свойства.Получить(ИмяТекОбъекта);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Если ТипФабрики = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Возврат Ложь;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;КонецЕсли&#xD;&#xA;&#x9;&#x9;&#x9;КонецЦикла;&#xD;&#xA;&#x9;&#x9;&#x9;Результат = ТипФабрики &lt;> Неопределено;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Возврат Результат;"/>
  <algorithms name="УправленческоеПодразделениеВедомостиНаВыплатуЗП" exists="true" methodType="Функция" params="ДанныеИБ, ЭтоНДФЛ = Ложь" body="&#x9;Подразделение = Неопределено;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;ВидВедомости = ДанныеИБ.Метаданные().ПолноеИмя();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если ЭтоНДФЛ Тогда&#xD;&#xA;&#x9;&#x9;ТекстЗапроса =&#xD;&#xA;&#x9;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;ЕСТЬNULL(СтруктураПредприятия.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;&amp;ДокументВедомостьНаВыплату_НДФЛ КАК НДФЛ&#x9;&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ПО (СтруктураПредприятия.Источник = НДФЛ.Подразделение)&#xD;&#xA;&#x9;&#x9;|ГДЕ&#xD;&#xA;&#x9;&#x9;|&#x9;НДФЛ.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;&#x9;|&#xD;&#xA;&#x9;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;&#x9;|&#x9;ЕСТЬNULL(СтруктураПредприятия.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстЗапроса = СтрЗаменить(ТекстЗапроса, &quot;&amp;ДокументВедомостьНаВыплату_НДФЛ&quot;, ВидВедомости + &quot;.НДФЛ&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Запрос = Новый Запрос(ТекстЗапроса);&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;&#x9;Если Выборка.Количество() = 1 Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Выборка.Следующий();&#xD;&#xA;&#x9;&#x9;&#x9;Если Не Выборка.Подразделение.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Подразделение = Выборка.Подразделение;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;КадровыеДанныеТЧ = КадровыйУчет.КадровыеДанныеСотрудников(&#xD;&#xA;&#x9;&#x9;&#x9;Ложь,&#xD;&#xA;&#x9;&#x9;&#x9;ДанныеИБ.Зарплата.ВыгрузитьКолонку(&quot;Сотрудник&quot;),&#xD;&#xA;&#x9;&#x9;&#x9;&quot;МестоВСтруктуреПредприятия&quot;,&#xD;&#xA;&#x9;&#x9;&#x9;КонецМесяца(ДанныеИБ.ПериодРегистрации));&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстЗапроса =&#xD;&#xA;&#x9;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;Т.ФизическоеЛицо,&#xD;&#xA;&#x9;&#x9;|&#x9;Т.Сотрудник,&#xD;&#xA;&#x9;&#x9;|&#x9;Т.МестоВСтруктуреПредприятия&#xD;&#xA;&#x9;&#x9;|ПОМЕСТИТЬ КадровыеДанные&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;&amp;КадровыеДанные КАК Т&#xD;&#xA;&#x9;&#x9;|;&#xD;&#xA;&#x9;&#x9;|&#xD;&#xA;&#x9;&#x9;|////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#x9;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;КОГДА ЕСТЬNULL(КадровыеДанные.МестоВСтруктуреПредприятия, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;&#x9;ТОГДА ЕСТЬNULL(СтруктураПредприятия.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ИНАЧЕ КадровыеДанные.МестоВСтруктуреПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;КОНЕЦ КАК Подразделение&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;&amp;ДокументВедомостьНаВыплату_Зарплата КАК Зарплата&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ЛЕВОЕ СОЕДИНЕНИЕ КадровыеДанные КАК КадровыеДанные&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ПО (КадровыеДанные.Сотрудник = Зарплата.Сотрудник)&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ПО (СтруктураПредприятия.Источник = Зарплата.Подразделение)&#xD;&#xA;&#x9;&#x9;|ГДЕ&#xD;&#xA;&#x9;&#x9;|&#x9;Зарплата.Ссылка = &amp;Ссылка&#xD;&#xA;&#x9;&#x9;|&#xD;&#xA;&#x9;&#x9;|СГРУППИРОВАТЬ ПО&#xD;&#xA;&#x9;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;КОГДА ЕСТЬNULL(КадровыеДанные.МестоВСтруктуреПредприятия, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;&#x9;ТОГДА ЕСТЬNULL(СтруктураПредприятия.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ИНАЧЕ КадровыеДанные.МестоВСтруктуреПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;КОНЕЦ&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;ТекстЗапроса = СтрЗаменить(ТекстЗапроса, &quot;&amp;ДокументВедомостьНаВыплату_Зарплата&quot;, ВидВедомости + &quot;.Зарплата&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Запрос = Новый Запрос(ТекстЗапроса);&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;Ссылка&quot;, ДанныеИБ.Ссылка);&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;КадровыеДанные&quot;, КадровыеДанныеТЧ);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;&#x9;Если Выборка.Количество() = 1 Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Выборка.Следующий();&#xD;&#xA;&#x9;&#x9;&#x9;Если Не Выборка.Подразделение.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Подразделение = Выборка.Подразделение;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Если Подразделение = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;// Подразделение бухгалтера или расчетчика&#xD;&#xA;&#x9;&#x9;ФизЛицоДляПодразделения = Неопределено;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Если Не ДанныеИБ.Бухгалтер.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;ФизЛицоДляПодразделения = ДанныеИБ.Бухгалтер;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;ФизЛицоДляПодразделения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Ответственный, &quot;ФизическоеЛицо&quot;);&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;СписокФизЛиц = Новый Массив;&#xD;&#xA;&#x9;&#x9;СписокФизЛиц.Добавить(ФизЛицоДляПодразделения);&#xD;&#xA;&#x9;&#x9;ТаблицаСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(СписокФизЛиц, Ложь, ДанныеИБ.Организация, КонецМесяца(ДанныеИБ.ПериодРегистрации));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(&#xD;&#xA;&#x9;&#x9;&#x9;Ложь,&#xD;&#xA;&#x9;&#x9;&#x9;ТаблицаСотрудники.ВыгрузитьКолонку(&quot;Сотрудник&quot;),&#xD;&#xA;&#x9;&#x9;&#x9;&quot;МестоВСтруктуреПредприятия, Подразделение&quot;,&#xD;&#xA;&#x9;&#x9;&#x9;КонецМесяца(ДанныеИБ.ПериодРегистрации));&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Запрос = Новый Запрос(&#xD;&#xA;&#x9;&#x9;&quot;ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;Т.ФизическоеЛицо,&#xD;&#xA;&#x9;&#x9;|&#x9;Т.Сотрудник,&#xD;&#xA;&#x9;&#x9;|&#x9;Т.Подразделение,&#xD;&#xA;&#x9;&#x9;|&#x9;Т.МестоВСтруктуреПредприятия&#xD;&#xA;&#x9;&#x9;|ПОМЕСТИТЬ КадровыеДанные&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;&amp;КадровыеДанные КАК Т&#xD;&#xA;&#x9;&#x9;|;&#xD;&#xA;&#x9;&#x9;|&#xD;&#xA;&#x9;&#x9;|////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#x9;&#x9;|ВЫБРАТЬ&#xD;&#xA;&#x9;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;КОГДА ЕСТЬNULL(КадровыеДанные.МестоВСтруктуреПредприятия, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;&#x9;ТОГДА ЕСТЬNULL(СтруктураПредприятия.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ИНАЧЕ КадровыеДанные.МестоВСтруктуреПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;КОНЕЦ КАК Подразделение&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;КадровыеДанные КАК КадровыеДанные&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ПО (СтруктураПредприятия.Источник = КадровыеДанные.Подразделение)&quot;);&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;КадровыеДанные&quot;, КадровыеДанные);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Выборка = Запрос.Выполнить().Выбрать();&#xD;&#xA;&#x9;&#x9;Если Выборка.Следующий()&#xD;&#xA;&#x9;&#x9;&#x9;И Не Выборка.Подразделение.Пустая() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Подразделение = Выборка.Подразделение;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Возврат Подразделение;"/>
  <algorithms name="ЭлементПоУмолчанию_ГруппаДоступаФизЛица" exists="true" methodType="Функция" params="ПараметрыКонвертации" body="&#x9;ГруппаДоступа = Неопределено;&#xD;&#xA;&#x9;Если ПараметрыКонвертации.ГруппаДоступаФизЛицПоУмолчанию = Неопределено Тогда&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НеобходимоСоздатьЭлемент = Ложь;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;НаименованиеЭлементаДляОбменаПоУмолчанию = НСтр(&quot;ru='Группа доступа по умолчанию'&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Запрос = Новый Запрос(&quot;ВЫБРАТЬ ПЕРВЫЕ 2&#xD;&#xA;&#x9;&#x9;|&#x9;ГруппыДоступаФизЛиц.Ссылка КАК ГруппаДоступаФизЛица,&#xD;&#xA;&#x9;&#x9;|&#x9;ВЫБОР&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;КОГДА ГруппыДоступаФизЛиц.Наименование = &amp;НаименованиеЭлементаДляОбменаПоУмолчанию&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;&#x9;ТОГДА ИСТИНА&#xD;&#xA;&#x9;&#x9;|&#x9;&#x9;ИНАЧЕ ЛОЖЬ&#xD;&#xA;&#x9;&#x9;|&#x9;КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена&#xD;&#xA;&#x9;&#x9;|ИЗ&#xD;&#xA;&#x9;&#x9;|&#x9;Справочник.ГруппыДоступаФизическихЛиц КАК ГруппыДоступаФизЛиц&#xD;&#xA;&#x9;&#x9;|ГДЕ&#xD;&#xA;&#x9;&#x9;|&#x9;НЕ ГруппыДоступаФизЛиц.ПометкаУдаления&#xD;&#xA;&#x9;&#x9;|&#xD;&#xA;&#x9;&#x9;|УПОРЯДОЧИТЬ ПО&#xD;&#xA;&#x9;&#x9;|&#x9;ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Запрос.УстановитьПараметр(&quot;НаименованиеЭлементаДляОбменаПоУмолчанию&quot;, НаименованиеЭлементаДляОбменаПоУмолчанию);&#xD;&#xA;&#x9;&#x9;РезультатЗапроса = Запрос.Выполнить();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Выборка = РезультатЗапроса.Выбрать();&#xD;&#xA;&#x9;&#x9;Если Выборка.Следующий() Тогда&#xD;&#xA;&#x9;&#x9;&#x9;Если Выборка.Количество() = 1 Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ГруппаДоступа = Выборка.ГруппаДоступаФизЛица;&#xD;&#xA;&#x9;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;НеобходимоСоздатьЭлемент = Истина;&#xD;&#xA;&#x9;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;&#x9;НеобходимоСоздатьЭлемент = Истина;&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Создание элемента для обмена с заданными параметрами&#xD;&#xA;&#x9;&#x9;Если НеобходимоСоздатьЭлемент Тогда&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;ГруппаДоступаОбъект = Справочники.ГруппыДоступаФизическихЛиц.СоздатьЭлемент();&#xD;&#xA;&#x9;&#x9;&#x9;ГруппаДоступаОбъект.Наименование = НаименованиеЭлементаДляОбменаПоУмолчанию;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Попытка&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ГруппаДоступаОбъект.Записать();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ГруппаДоступа = ГруппаДоступаОбъект.Ссылка;&#xD;&#xA;&#x9;&#x9;&#x9;Исключение&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ГруппаДоступа = Справочники.ГруппыДоступаФизическихЛиц.ПустаяСсылка();&#xD;&#xA;&#x9;&#x9;&#x9;КонецПопытки&#xD;&#xA;&#x9;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ПараметрыКонвертации.ГруппаДоступаФизЛицПоУмолчанию = ГруппаДоступа;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;Иначе&#xD;&#xA;&#x9;&#x9;ГруппаДоступа = ПараметрыКонвертации.ГруппаДоступаФизЛицПоУмолчанию;&#xD;&#xA;&#x9;КонецЕсли;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Возврат ГруппаДоступа;"/>
</cm:ConversionModule>
