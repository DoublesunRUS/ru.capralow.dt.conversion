// Конвертация Тестирование от 04.04.2019 18:24:29
#Область ПроцедурыКонвертации
Процедура ПередКонвертацией(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПослеКонвертации(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПередОтложеннымЗаполнением(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

// Возвращает версию формата менеджера обмена.
// Возвращаемое значение:
//  Число - номер версии.
Функция ВерсияФорматаМенеджераОбмена() Экспорт
    Возврат "2";
КонецФункции

#КонецОбласти
#Область ПОД
// Заполняет таблицу правил обработки данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаОбработкиДанных - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаОбработкиДанных(НаправлениеОбмена, ПравилаОбработкиДанных) Экспорт
	
КонецПроцедуры



#КонецОбласти
#Область ПКО
// Заполняет таблицу правил конвертации объектов.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаКонвертацииОбъектов(НаправлениеОбмена, ПравилаКонвертации) Экспорт
	Если НаправлениеОбмена = "Отправка" Тогда
		ДобавитьПКО_МинимальноеПКООтправки(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиДвеТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурации(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиПолное(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиСобытие1(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиШапка(ПравилаКонвертации);
	ИначеЕсли НаправлениеОбмена = "Получение" Тогда
		ДобавитьПКО_МинимальноеПКОПолучения(ПравилаКонвертации);
	КонецЕсли;
	ДобавитьПКО_МинимальноеПКООтправкиПолучения(ПравилаКонвертации);
КонецПроцедуры

Функция ДобавитьПКТЧ(ПравилоКонвертации, ИмяТЧКонфигурации, ИмяТЧФормата)
    Если ПравилоКонвертации.СвойстваТабличныхЧастей.Колонки.Количество() = 0 Тогда
        ОбменДаннымиXDTOСервер.ИнициализироватьСвойстваТабличныхЧастей(ПравилоКонвертации);
    КонецЕсли;
    КонвертацияТабличнойЧасти                = ПравилоКонвертации.СвойстваТабличныхЧастей.Добавить();
    КонвертацияТабличнойЧасти.ТЧКонфигурации = ИмяТЧКонфигурации;
    КонвертацияТабличнойЧасти.ТЧФормата      = ИмяТЧФормата;
    КонвертацияТабличнойЧасти.Свойства       = ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации();
    Возврат КонвертацияТабличнойЧасти.Свойства;
КонецФункции

Процедура ДобавитьПКС(РодительПКС, СвойствоКонфигурации, СвойствоФормата, ИспользуетсяАлгоритмКонвертации = 0, 
                    ПравилоКонвертацииСвойства = "")
	НоваяСтрока                                 = РодительПКС.Добавить();
	НоваяСтрока.СвойствоКонфигурации            = СвойствоКонфигурации;
	НоваяСтрока.СвойствоФормата                 = СвойствоФормата;
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = ?(ИспользуетсяАлгоритмКонвертации = 0, Ложь, Истина);
	НоваяСтрока.ПравилоКонвертацииСвойства      = ПравилоКонвертацииСвойства;
КонецПроцедуры

#Область Отправка
#Область МинимальноеПКООтправки
Процедура ДобавитьПКО_МинимальноеПКООтправки(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "МинимальноеПКООтправки";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиДвеТЧ
Процедура ДобавитьПКО_ПКООтправкиДвеТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиДвеТЧ";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурации
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурации(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурации";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииСПолями";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "Наименование", "");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииФормата
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииФормата";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииФорматаСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектФормата
Процедура ДобавитьПКО_ПКООтправкиОбъектФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектФормата";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектФорматаСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "", "Наименование");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиПолное
Процедура ДобавитьПКО_ПКООтправкиПолное(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиПолное";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_ПКООтправкиПолное_ПриОтправкеДанных";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",             "КПП");
	ДобавитьПКС(СвойстваШапки, "ИНН",          "");
	ДобавитьПКС(СвойстваШапки, "Наименование", "Наименование");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры

Процедура ПКО_ПКООтправкиПолное_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Сообщить("ПриОтправкеДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиСобытие1
Процедура ДобавитьПКО_ПКООтправкиСобытие1(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиСобытие1";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "";
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных";
	

КонецПроцедуры

Процедура ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Сообщить("ПриОтправкеДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиТЧ
Процедура ДобавитьПКО_ПКООтправкиТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиТЧ";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиШапка
Процедура ДобавитьПКО_ПКООтправкиШапка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиШапка";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",             "КПП");
	ДобавитьПКС(СвойстваШапки, "ИНН",          "");
	ДобавитьПКС(СвойстваШапки, "Наименование", "Наименование");

КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область Получение
#Область МинимальноеПКОПолучения
Процедура ДобавитьПКО_МинимальноеПКОПолучения(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "МинимальноеПКОПолучения";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область ОтправкаИПолучение
#Область МинимальноеПКООтправкиПолучения
Процедура ДобавитьПКО_МинимальноеПКООтправкиПолучения(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "МинимальноеПКООтправкиПолучения";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#КонецОбласти

#КонецОбласти
#Область ПКПД
// Заполняет таблицу правил конвертации предопределенных данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую будут добавлены правила. 
Процедура ЗаполнитьПравилаКонвертацииПредопределенныхДанных(НаправлениеОбмена, ПравилаКонвертации) Экспорт
КонецПроцедуры

#КонецОбласти
#Область Алгоритмы



#КонецОбласти
#Область Параметры
// Заполняет параметры конвертации.
//
// Параметры:
//  ПараметрыКонвертации - структура, в которую добавляются параметры конвертации.
Процедура ЗаполнитьПараметрыКонвертации(ПараметрыКонвертации) Экспорт
КонецПроцедуры

#КонецОбласти
#Область ОбщегоНазначения
// Процедура-обертка, выполняет запуск указанной в параметрах процедуры модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяПроцедуры - строка.
//  СтруктураПараметров - структура, содержащая передаваемые параметры.
Процедура ВыполнитьПроцедуруМодуляМенеджера(ИмяПроцедуры, Параметры) Экспорт
	Если ИмяПроцедуры = "ПКО_ПКООтправкиПолное_ПриОтправкеДанных" Тогда 
		ПКО_ПКООтправкиПолное_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных" Тогда 
		ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
