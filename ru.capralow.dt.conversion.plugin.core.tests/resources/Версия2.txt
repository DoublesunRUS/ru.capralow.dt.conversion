// Конвертация Тестирование от 01.01.0001 24:00:00
#Область ПроцедурыКонвертации
Процедура ПередКонвертацией(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПослеКонвертации(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПередОтложеннымЗаполнением(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

// Возвращает версию формата менеджера обмена.
// Возвращаемое значение:
//  Число - номер версии.
Функция ВерсияФорматаМенеджераОбмена() Экспорт
    Возврат "2";
КонецФункции

#КонецОбласти
#Область ПОД
// Заполняет таблицу правил обработки данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаОбработкиДанных - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаОбработкиДанных(НаправлениеОбмена, ПравилаОбработкиДанных) Экспорт
	
КонецПроцедуры



#КонецОбласти
#Область ПКО
// Заполняет таблицу правил конвертации объектов.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаКонвертацииОбъектов(НаправлениеОбмена, ПравилаКонвертации) Экспорт
	Если НаправлениеОбмена = "Отправка" Тогда
		ДобавитьПКО_МинимальноеПКООтправки(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиДвеТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурации(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиОбъектФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиПолное(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиСобытие1(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиШапка(ПравилаКонвертации);
		ДобавитьПКО_ПКООтправкиШапкаТЧ(ПравилаКонвертации);
	ИначеЕсли НаправлениеОбмена = "Получение" Тогда
		ДобавитьПКО_МинимальноеПКОПолучения(ПравилаКонвертации);
		ДобавитьПКО_МинимальноеПКОПолученияДляГруппы(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияДвеТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияИдентификация1СПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияИдентификация2(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияИдентификация2СПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияИдентификация3(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияИдентификация3СПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектКонфигурации(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектКонфигурацииСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектКонфигурацииФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектФормата(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияОбъектФорматаСПолями(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияПолное(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие1(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие12(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие13(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие2(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие23(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияСобытие3(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияТЧ(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияШапка(ПравилаКонвертации);
		ДобавитьПКО_ПКОПолученияШапкаТЧ(ПравилаКонвертации);
	КонецЕсли;
	ДобавитьПКО_МинимальноеПКООтправкиПолучения(ПравилаКонвертации);
КонецПроцедуры

Функция ДобавитьПКТЧ(ПравилоКонвертации, ИмяТЧКонфигурации, ИмяТЧФормата)
    Если ПравилоКонвертации.СвойстваТабличныхЧастей.Колонки.Количество() = 0 Тогда
        ОбменДаннымиXDTOСервер.ИнициализироватьСвойстваТабличныхЧастей(ПравилоКонвертации);
    КонецЕсли;
    КонвертацияТабличнойЧасти                = ПравилоКонвертации.СвойстваТабличныхЧастей.Добавить();
    КонвертацияТабличнойЧасти.ТЧКонфигурации = ИмяТЧКонфигурации;
    КонвертацияТабличнойЧасти.ТЧФормата      = ИмяТЧФормата;
    КонвертацияТабличнойЧасти.Свойства       = ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации();
    Возврат КонвертацияТабличнойЧасти.Свойства;
КонецФункции

Процедура ДобавитьПКС(РодительПКС, СвойствоКонфигурации, СвойствоФормата, ИспользуетсяАлгоритмКонвертации = 0, 
                    ПравилоКонвертацииСвойства = "")
	НоваяСтрока                                 = РодительПКС.Добавить();
	НоваяСтрока.СвойствоКонфигурации            = СвойствоКонфигурации;
	НоваяСтрока.СвойствоФормата                 = СвойствоФормата;
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = ?(ИспользуетсяАлгоритмКонвертации = 0, Ложь, Истина);
	НоваяСтрока.ПравилоКонвертацииСвойства      = ПравилоКонвертацииСвойства;
КонецПроцедуры

#Область Отправка
#Область МинимальноеПКООтправки
Процедура ДобавитьПКО_МинимальноеПКООтправки(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "МинимальноеПКООтправки";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиДвеТЧ
Процедура ДобавитьПКО_ПКООтправкиДвеТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиДвеТЧ";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурации
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурации(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурации";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииСПолями";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииФормата
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииФормата";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектКонфигурацииФорматаСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектКонфигурацииФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектФормата
Процедура ДобавитьПКО_ПКООтправкиОбъектФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектФормата";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиОбъектФорматаСПолями
Процедура ДобавитьПКО_ПКООтправкиОбъектФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиОбъектФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиПолное
Процедура ДобавитьПКО_ПКООтправкиПолное(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиПолное";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_ПКООтправкиПолное_ПриОтправкеДанных";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры

Процедура ПКО_ПКООтправкиПолное_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Сообщить("ПриОтправкеДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиСобытие1
Процедура ДобавитьПКО_ПКООтправкиСобытие1(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиСобытие1";
	ПравилоКонвертации.ОбъектДанных      = Неопределено;
	ПравилоКонвертации.ОбъектФормата     = "";
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных";
	

КонецПроцедуры

Процедура ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Сообщить("ПриОтправкеДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиТЧ
Процедура ДобавитьПКО_ПКООтправкиТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиТЧ";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиШапка
Процедура ДобавитьПКО_ПКООтправкиШапка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиШапка";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКООтправкиШапкаТЧ
Процедура ДобавитьПКО_ПКООтправкиШапкаТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "ПКООтправкиШапкаТЧ";
	ПравилоКонвертации.ОбъектДанных      = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата     = "Справочник.Организации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "",         "ЗначениеСвойства", 1,"НесуществующееПравило");

КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область Получение
#Область МинимальноеПКОПолучения
Процедура ДобавитьПКО_МинимальноеПКОПолучения(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "МинимальноеПКОПолучения";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область МинимальноеПКОПолученияДляГруппы
Процедура ДобавитьПКО_МинимальноеПКОПолученияДляГруппы(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "МинимальноеПКОПолученияДляГруппы";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПравилоДляГруппыСправочника  = Истина;
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияДвеТЧ
Процедура ДобавитьПКО_ПКОПолученияДвеТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияДвеТЧ";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "Свойство", "", ,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияИдентификация1СПолями
Процедура ДобавитьПКО_ПКОПолученияИдентификация1СПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияИдентификация1СПолями";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

	ПравилоКонвертации.ПоляПоиска.Добавить("ГоловнаяОрганизация");
	ПравилоКонвертации.ПоляПоиска.Добавить("ИНН,Префикс");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияИдентификация2
Процедура ДобавитьПКО_ПКОПолученияИдентификация2(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияИдентификация2";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоПолямПоиска";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияИдентификация2СПолями
Процедура ДобавитьПКО_ПКОПолученияИдентификация2СПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияИдентификация2СПолями";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоПолямПоиска";
	

	ПравилоКонвертации.ПоляПоиска.Добавить("Ссылка");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияИдентификация3
Процедура ДобавитьПКО_ПКОПолученияИдентификация3(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияИдентификация3";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "СначалаПоУникальномуИдентификаторуПотомПоПолямПоиска";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияИдентификация3СПолями
Процедура ДобавитьПКО_ПКОПолученияИдентификация3СПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияИдентификация3СПолями";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "СначалаПоУникальномуИдентификаторуПотомПоПолямПоиска";
	

	ПравилоКонвертации.ПоляПоиска.Добавить("ГоловнаяОрганизация");
	ПравилоКонвертации.ПоляПоиска.Добавить("ИНН,Префикс");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектКонфигурации
Процедура ДобавитьПКО_ПКОПолученияОбъектКонфигурации(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектКонфигурации";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектКонфигурацииСПолями
Процедура ДобавитьПКО_ПКОПолученияОбъектКонфигурацииСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектКонфигурацииСПолями";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектКонфигурацииФормата
Процедура ДобавитьПКО_ПКОПолученияОбъектКонфигурацииФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектКонфигурацииФормата";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектКонфигурацииФорматаСПолями
Процедура ДобавитьПКО_ПКОПолученияОбъектКонфигурацииФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектКонфигурацииФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектФормата
Процедура ДобавитьПКО_ПКОПолученияОбъектФормата(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектФормата";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияОбъектФорматаСПолями
Процедура ДобавитьПКО_ПКОПолученияОбъектФорматаСПолями(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияОбъектФорматаСПолями";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияПолное
Процедура ДобавитьПКО_ПКОПолученияПолное(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияПолное";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO     = "ПКО_ПКОПолученияПолное_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ПередЗаписьюПолученныхДанных = "ПКО_ПКОПолученияПолное_ПередЗаписьюПолученныхДанных";
	ПравилоКонвертации.ПослеЗагрузкиВсехДанных      = "АлгоритмПослеЗагрузкиВсехДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "Свойство", "", ,"НесуществующееПравило");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "КонтактнаяИнформация",    "КонтактнаяИнформация");
	ДобавитьПКС(СвойстваТЧ, "Вид", "ВидКонтактнойИнформации", ,"ВидыКонтактнойИнформации");

КонецПроцедуры

Процедура ПКО_ПКОПолученияПолное_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Сообщить("ПриКонвертацииДанныхXDTO");
КонецПроцедуры

Процедура ПКО_ПКОПолученияПолное_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Сообщить("ПередЗаписьюПолученныхДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие1
Процедура ДобавитьПКО_ПКОПолученияСобытие1(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие1";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO     = "ПКО_ПКОПолученияСобытие1_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие1_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Сообщить("ПриКонвертацииДанныхXDTO");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие12
Процедура ДобавитьПКО_ПКОПолученияСобытие12(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие12";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO     = "ПКО_ПКОПолученияСобытие12_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ПередЗаписьюПолученныхДанных = "ПКО_ПКОПолученияСобытие12_ПередЗаписьюПолученныхДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие12_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Сообщить("ПриКонвертацииДанныхXDTO");
КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие12_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Сообщить("ПередЗаписьюПолученныхДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие13
Процедура ДобавитьПКО_ПКОПолученияСобытие13(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие13";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO     = "ПКО_ПКОПолученияСобытие13_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ПослеЗагрузкиВсехДанных      = "АлгоритмПослеЗагрузкиВсехДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие13_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Сообщить("ПриКонвертацииДанныхXDTO");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие2
Процедура ДобавитьПКО_ПКОПолученияСобытие2(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие2";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПередЗаписьюПолученныхДанных = "ПКО_ПКОПолученияСобытие2_ПередЗаписьюПолученныхДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие2_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Сообщить("ПередЗаписьюПолученныхДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие23
Процедура ДобавитьПКО_ПКОПолученияСобытие23(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие23";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПередЗаписьюПолученныхДанных = "ПКО_ПКОПолученияСобытие23_ПередЗаписьюПолученныхДанных";
	ПравилоКонвертации.ПослеЗагрузкиВсехДанных      = "АлгоритмПослеЗагрузкиВсехДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры

Процедура ПКО_ПКОПолученияСобытие23_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Сообщить("ПередЗаписьюПолученныхДанных");
КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияСобытие3
Процедура ДобавитьПКО_ПКОПолученияСобытие3(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияСобытие3";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ПослеЗагрузкиВсехДанных      = "АлгоритмПослеЗагрузкиВсехДанных";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияТЧ
Процедура ДобавитьПКО_ПКОПолученияТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияТЧ";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "Свойство", "", ,"НесуществующееПравило");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияШапка
Процедура ДобавитьПКО_ПКОПолученияШапка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияШапка";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");

КонецПроцедуры
#КонецОбласти
#Область ПКОПолученияШапкаТЧ
Процедура ДобавитьПКО_ПКОПолученияШапкаТЧ(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "ПКОПолученияШапкаТЧ";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.Организации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.Организации";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "",                    "КПП");
	ДобавитьПКС(СвойстваШапки, "ГоловнаяОрганизация", "", , "ПКООтправкиОбъектКонфигурации");
	ДобавитьПКС(СвойстваШапки, "ИНН",                 "");
	ДобавитьПКС(СвойстваШапки, "Наименование",        "Наименование");
	ДобавитьПКС(СвойстваШапки, "",                    "ГоловнаяОрганизация", 1, "ПКООтправкиОбъектФорматаСПолями");
	
	СвойстваТЧ = ДобавитьПКТЧ(ПравилоКонвертации, "ДополнительныеРеквизиты", "ДополнительныеРеквизиты");
	ДобавитьПКС(СвойстваТЧ, "Значение", "ЗначениеСвойства");
	ДобавитьПКС(СвойстваТЧ, "Свойство", "", ,"НесуществующееПравило");

КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область ОтправкаИПолучение
#Область МинимальноеПКООтправкиПолучения
Процедура ДобавитьПКО_МинимальноеПКООтправкиПолучения(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "МинимальноеПКООтправкиПолучения";
	ПравилоКонвертации.ОбъектДанных                 = Неопределено;
	ПравилоКонвертации.ОбъектФормата                = "";
	ПравилоКонвертации.ВариантИдентификации         = "ПоУникальномуИдентификатору";
	

КонецПроцедуры
#КонецОбласти
#КонецОбласти

#КонецОбласти
#Область ПКПД
// Заполняет таблицу правил конвертации предопределенных данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую будут добавлены правила. 
Процедура ЗаполнитьПравилаКонвертацииПредопределенныхДанных(НаправлениеОбмена, ПравилаКонвертации) Экспорт
КонецПроцедуры

#КонецОбласти
#Область Алгоритмы


Процедура АлгоритмПослеЗагрузкиВсехДанных(Объект, КомпонентыОбмена, ОбъектМодифицирован)
	Сообщить("АлгоритмПослеЗагрузкиВсехДанных");
КонецПроцедуры

#КонецОбласти
#Область Параметры
// Заполняет параметры конвертации.
//
// Параметры:
//  ПараметрыКонвертации - структура, в которую добавляются параметры конвертации.
Процедура ЗаполнитьПараметрыКонвертации(ПараметрыКонвертации) Экспорт
КонецПроцедуры

#КонецОбласти
#Область ОбщегоНазначения
// Процедура-обертка, выполняет запуск указанной в параметрах процедуры модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяПроцедуры - строка.
//  СтруктураПараметров - структура, содержащая передаваемые параметры.
Процедура ВыполнитьПроцедуруМодуляМенеджера(ИмяПроцедуры, Параметры) Экспорт
	Если ИмяПроцедуры = "ПКО_ПКООтправкиПолное_ПриОтправкеДанных" Тогда 
		ПКО_ПКООтправкиПолное_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных" Тогда 
		ПКО_ПКООтправкиСобытие1_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияПолное_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_ПКОПолученияПолное_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияПолное_ПередЗаписьюПолученныхДанных" Тогда 
		ПКО_ПКОПолученияПолное_ПередЗаписьюПолученныхДанных(
			Параметры.ПолученныеДанные, Параметры.ДанныеИБ, Параметры.КонвертацияСвойств, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие1_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_ПКОПолученияСобытие1_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие12_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_ПКОПолученияСобытие12_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие12_ПередЗаписьюПолученныхДанных" Тогда 
		ПКО_ПКОПолученияСобытие12_ПередЗаписьюПолученныхДанных(
			Параметры.ПолученныеДанные, Параметры.ДанныеИБ, Параметры.КонвертацияСвойств, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие13_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_ПКОПолученияСобытие13_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие2_ПередЗаписьюПолученныхДанных" Тогда 
		ПКО_ПКОПолученияСобытие2_ПередЗаписьюПолученныхДанных(
			Параметры.ПолученныеДанные, Параметры.ДанныеИБ, Параметры.КонвертацияСвойств, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_ПКОПолученияСобытие23_ПередЗаписьюПолученныхДанных" Тогда 
		ПКО_ПКОПолученияСобытие23_ПередЗаписьюПолученныхДанных(
			Параметры.ПолученныеДанные, Параметры.ДанныеИБ, Параметры.КонвертацияСвойств, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "АлгоритмПослеЗагрузкиВсехДанных" Тогда 
		АлгоритмПослеЗагрузкиВсехДанных(
			Параметры.Объект, Параметры.КомпонентыОбмена, Параметры.ОбъектМодифицирован);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
