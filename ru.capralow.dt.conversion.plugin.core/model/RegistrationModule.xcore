@GenModel(loadInitialization="false", literalsInterface="true", nonNLSMarkers="true", prefix="rm", updateClasspath="false")
@Ecore(nsPrefix="rm", nsURI="http://ru.capralow.dt.conversion.plugin.core.rm.model")
package ru.capralow.dt.conversion.plugin.core.rm.model

import java.text.ParseException
import java.text.SimpleDateFormat
import java.util.Date

class RegistrationModule {
	String moduleRef = ""
	String moduleName = ""
 	String moduleVersion = ""
	Date moduleCreationDate
	
	String exchangePlanName = ""
	String exchangePlanMdObject =""
	
	String runtimeVersion = ""
	
	String configurationName = ""
	String configurationSynonym = ""
	String configurationVersion = ""
	
	contains ExchangePlanContent[] exchangePlanContent
	
	contains RegistrationRule[] registrationRules
}

class ExchangePlanContent {
	String mdObject = ""
	AutoRegistration AutoRecord
}

class RegistrationRule {
	Boolean isFolder = "false"
	
	Boolean disabled = "false"
	Boolean valid = "false"
	
	String code = ""
	String name = ""
	String mdObject = ""
	String objectName = ""
	String mdClass = ""
	
	String attributeSendMode = ""
	
	contains ObjectSelectionRule[] objectSelectionRules
	contains ExchangePlanSelectionRule[] exchangePlanSelectionRules
}

class ObjectSelectionRule {
	Boolean isFolder = "false"
	
}

class ExchangePlanSelectionRule {
	Boolean isFolder = "false"
	
}

type Date wraps Date
create {
	try {
		if (it !== null) new SimpleDateFormat("yyyy-MM-ddTHH:mm:ss").parse(it);
	}
	catch (ParseException exception) {
		throw new RuntimeException(exception);
	}
}
convert {
	if (it !== null) new SimpleDateFormat("yyyy-MM-ddTHH:mm:ss").format(it);
}

enum AutoRegistration {
	Allow as "Разрешить" = 1
	Deny as "Запретить" = 0
}