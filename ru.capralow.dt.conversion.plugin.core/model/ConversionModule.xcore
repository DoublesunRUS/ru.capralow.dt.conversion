@GenModel(publicConstructors="true", loadInitialization="false", literalsInterface="true", nonNLSMarkers="true",
	updateClasspath="false", featureDelegation="Reflective", rootExtendsClass="com._1c.g5.v8.bm.core.BmObject",
	rootExtendsInterface="com._1c.g5.v8.bm.core.IBmObject")
package ru.capralow.dt.conversion.plugin.core.cm

class ConversionModule {
	String storeVersion
	
	Object moduleURI
	
	contains CmDataRule[] dataRules
	op CmDataRule getDataRule(String ruleName) {
		for (CmDataRule dataRule : dataRules) {
			if (ruleName == dataRule.getName) return dataRule
		}
		return null;
	}
	
	contains CmObjectRule[] objectRules
	op CmObjectRule getObjectRule(String ruleName) {
		for (CmObjectRule objectRule : objectRules) {
			if (ruleName == objectRule.getName) return objectRule
		}
		return null;
	}
	
	String predefineds
	
	String params
	
	String beforeConvertationEvent
	String afterConvertationEvent
	String beforeFillingEvent
	Object beforeConvertationEventMethod
	
	contains CmSendingRule[] sendingRules
	
	String algorithms
}

class CmSendingRule {
	Object configurationObject

	refers CmDataRule dataRule

	refers CmObjectRule[] objectRules
}

class CmDataRule {
	String name
	
	Boolean isDisabled

	Object configurationObject
	String formatObject
	
	Boolean forSending
	Boolean forReceiving
	Boolean isDataCleaning
	CmSelectionVariant selectionVariant
	
	String dataSelectionEvent
	String beforeProcessingEvent
	String onProcessingEvent
	
	refers CmObjectRule[] objectRules
}

enum CmSelectionVariant {
	Standart as "Стандартная выборка" = 0
	Custom as "Произвольный алгоритм" = 1
}

class CmObjectRule {
	String name

	Boolean isDisabled

	Object configurationObject
	String formatObject
	
	Boolean forSending
	Boolean forReceiving
	Boolean isForGroup
	CmIdentificationVariant identificationVariant
	
	String beforeSendingEvent
	String onSendingEvent
	String beforeReceivingEvent
	String onReceivingEvent
	String afterReceivingAlgorithm

	contains CmAttributeRule[] attributeRules
}

enum CmIdentificationVariant {
	UUID as "По уникальному идентификатору" = 0
	SearchFields as "По полям поиска" = 1
	UUIDThenSerachFields as "Сначала по уникальному идентификатору потом по полям поиска" = 2
}

class CmAttributeRule {
	String configurationTabularSectionName
	String configurationAttributeName
	
	String formatTabularSectionName
	String formatAttributeName
	
	refers CmObjectRule objectRule
	
	Boolean isCustomRule
}