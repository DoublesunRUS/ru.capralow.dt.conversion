@GenModel(publicConstructors="true", loadInitialization="false", literalsInterface="true", nonNLSMarkers="true",
	updateClasspath="false", featureDelegation="Reflective", rootExtendsClass="com._1c.g5.v8.bm.core.BmObject",
	rootExtendsInterface="com._1c.g5.v8.bm.core.IBmObject")
package ru.capralow.dt.conversion.plugin.core.cp

import com._1c.g5.v8.dt.bsl.model.Module

class ConversionPanel {
	contains cpExchangePair[] ExchangePairs
	contains cpConfiguration[] configurations
	op cpConfiguration getConfiguration(String configurationName) {
		for (cpConfiguration configuration : configurations) {
			if (configurationName == configuration.configurationName) return configuration
		}
		return null;
	}
	op Object[] getObjects() {
		val result = newBasicEList()

		for (cpConfiguration configuration : configurations) {
			for (Object coreObject : configuration.coreObjects) {
				result.add(coreObject)
			}
		}
		return result
	}
}

class cpConfiguration {
	Object configurationObject
	String configurationName
	String storeVersion
	contains cpExtension[] extensions
	ConfigurationStatus Status
	contains cpFormatVersion[] availableFormatVersions
	op String[] getVersions() {
		val result = newBasicEList()
		for (cpFormatVersion formatVersion : availableFormatVersions) {
			result.add(formatVersion.version)
		}
		return result
	}
	Object[] coreObjects
}

class cpExtension {
	Object configurationObject
	String configurationName
}

class cpFormatVersion {
	String version
	String configurationName
	contains Module module
}

class cpExchangePair {
	String configurationName1
	String configurationName2
	ExchangePairStatus Status
	String[] versions
}

enum ExchangePairStatus {
	NoSharedFormatVersions as "Нет совпадений по доступным версиям формата" = 0
	Ready as "Конфигурации готовы к обмену" = 1
}

enum ConfigurationStatus {
	NoConfiguration as "Ожидание активации проектного контекста" = 0
	NoSubsystem as "Нет подсистемы ОбменДанными" = 1
	NoSSLVersion as "Не удалось определить версию БСП" = 2
	NoCommonModule as "Нет общего модуля ОбменДаннымиПереопределяемый" = 3
	NoMethod as "В общем модуле нет метода ПриПолученииДоступныхВерсийФормата" = 4
	EmptyMethod as "В процедуре ПриПолученииДоступныхВерсийФормата не указаны версии формата" = 5
	Ready as "Конфигурация готова к обмену" = 6
}